//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace HisProxy.Medicare {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MedicareInterfaceSet", Namespace="http://schemas.datacontract.org/2004/07/HisService.Entity")]
    [System.SerializableAttribute()]
    public partial class MedicareInterfaceSet : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyWord2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MedicareInterfaceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedicareInterfaceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MemoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeyWord2 {
            get {
                return this.KeyWord2Field;
            }
            set {
                if ((object.ReferenceEquals(this.KeyWord2Field, value) != true)) {
                    this.KeyWord2Field = value;
                    this.RaisePropertyChanged("KeyWord2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MedicareInterfaceID {
            get {
                return this.MedicareInterfaceIDField;
            }
            set {
                if ((this.MedicareInterfaceIDField.Equals(value) != true)) {
                    this.MedicareInterfaceIDField = value;
                    this.RaisePropertyChanged("MedicareInterfaceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedicareInterfaceName {
            get {
                return this.MedicareInterfaceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicareInterfaceNameField, value) != true)) {
                    this.MedicareInterfaceNameField = value;
                    this.RaisePropertyChanged("MedicareInterfaceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Memo {
            get {
                return this.MemoField;
            }
            set {
                if ((object.ReferenceEquals(this.MemoField, value) != true)) {
                    this.MemoField = value;
                    this.RaisePropertyChanged("Memo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CardTypeChargeContrast", Namespace="http://schemas.datacontract.org/2004/07/HisService.Entity")]
    [System.SerializableAttribute()]
    public partial class CardTypeChargeContrast : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CardTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MedicareInterfaceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SysSignField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CardType {
            get {
                return this.CardTypeField;
            }
            set {
                if ((this.CardTypeField.Equals(value) != true)) {
                    this.CardTypeField = value;
                    this.RaisePropertyChanged("CardType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MedicareInterfaceID {
            get {
                return this.MedicareInterfaceIDField;
            }
            set {
                if ((this.MedicareInterfaceIDField.Equals(value) != true)) {
                    this.MedicareInterfaceIDField = value;
                    this.RaisePropertyChanged("MedicareInterfaceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SysSign {
            get {
                return this.SysSignField;
            }
            set {
                if ((this.SysSignField.Equals(value) != true)) {
                    this.SysSignField = value;
                    this.RaisePropertyChanged("SysSign");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MedicareDealTypeSet", Namespace="http://schemas.datacontract.org/2004/07/HisService.Entity")]
    [System.SerializableAttribute()]
    public partial class MedicareDealTypeSet : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsUseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MedicareDealTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MedicareInterfaceIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsUse {
            get {
                return this.IsUseField;
            }
            set {
                if ((this.IsUseField.Equals(value) != true)) {
                    this.IsUseField = value;
                    this.RaisePropertyChanged("IsUse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MedicareDealType {
            get {
                return this.MedicareDealTypeField;
            }
            set {
                if ((this.MedicareDealTypeField.Equals(value) != true)) {
                    this.MedicareDealTypeField = value;
                    this.RaisePropertyChanged("MedicareDealType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MedicareInterfaceID {
            get {
                return this.MedicareInterfaceIDField;
            }
            set {
                if ((this.MedicareInterfaceIDField.Equals(value) != true)) {
                    this.MedicareInterfaceIDField = value;
                    this.RaisePropertyChanged("MedicareInterfaceID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Medicare.IMedicare")]
    public interface IMedicare {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicare/QueryDataTable", ReplyAction="http://tempuri.org/IMedicare/QueryDataTableResponse")]
        System.Data.DataTable QueryDataTable(string sql);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicare/QuerySingle", ReplyAction="http://tempuri.org/IMedicare/QuerySingleResponse")]
        int QuerySingle(string sql);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicare/GetMedicareInterfaceSetAll", ReplyAction="http://tempuri.org/IMedicare/GetMedicareInterfaceSetAllResponse")]
        HisProxy.Medicare.MedicareInterfaceSet[] GetMedicareInterfaceSetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicare/GetCardTypeChargeContrastAll", ReplyAction="http://tempuri.org/IMedicare/GetCardTypeChargeContrastAllResponse")]
        HisProxy.Medicare.CardTypeChargeContrast[] GetCardTypeChargeContrastAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedicare/GetMedicareDealTypeSetAll", ReplyAction="http://tempuri.org/IMedicare/GetMedicareDealTypeSetAllResponse")]
        HisProxy.Medicare.MedicareDealTypeSet[] GetMedicareDealTypeSetAll();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMedicareChannel : HisProxy.Medicare.IMedicare, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MedicareClient : System.ServiceModel.ClientBase<HisProxy.Medicare.IMedicare>, HisProxy.Medicare.IMedicare {
        
        public MedicareClient() {
        }
        
        public MedicareClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MedicareClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MedicareClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MedicareClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataTable QueryDataTable(string sql) {
            return base.Channel.QueryDataTable(sql);
        }
        
        public int QuerySingle(string sql) {
            return base.Channel.QuerySingle(sql);
        }
        
        public HisProxy.Medicare.MedicareInterfaceSet[] GetMedicareInterfaceSetAll() {
            return base.Channel.GetMedicareInterfaceSetAll();
        }
        
        public HisProxy.Medicare.CardTypeChargeContrast[] GetCardTypeChargeContrastAll() {
            return base.Channel.GetCardTypeChargeContrastAll();
        }
        
        public HisProxy.Medicare.MedicareDealTypeSet[] GetMedicareDealTypeSetAll() {
            return base.Channel.GetMedicareDealTypeSetAll();
        }
    }
}
