//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace HisProxy.DrSchedule {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DivRegScheduleDto", Namespace="http://schemas.datacontract.org/2004/07/HisService.DrSchedule")]
    [System.SerializableAttribute()]
    public partial class DivRegScheduleDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AutoMachineQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DayOfWeekField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DivNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RegTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SumQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TelQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdateUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VisitSctionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VisitTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WebQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WindowQtyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AutoMachineQty {
            get {
                return this.AutoMachineQtyField;
            }
            set {
                if ((this.AutoMachineQtyField.Equals(value) != true)) {
                    this.AutoMachineQtyField = value;
                    this.RaisePropertyChanged("AutoMachineQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DayOfWeek {
            get {
                return this.DayOfWeekField;
            }
            set {
                if ((object.ReferenceEquals(this.DayOfWeekField, value) != true)) {
                    this.DayOfWeekField = value;
                    this.RaisePropertyChanged("DayOfWeek");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DivNo {
            get {
                return this.DivNoField;
            }
            set {
                if ((object.ReferenceEquals(this.DivNoField, value) != true)) {
                    this.DivNoField = value;
                    this.RaisePropertyChanged("DivNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RegType {
            get {
                return this.RegTypeField;
            }
            set {
                if ((this.RegTypeField.Equals(value) != true)) {
                    this.RegTypeField = value;
                    this.RaisePropertyChanged("RegType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SumQty {
            get {
                return this.SumQtyField;
            }
            set {
                if ((this.SumQtyField.Equals(value) != true)) {
                    this.SumQtyField = value;
                    this.RaisePropertyChanged("SumQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TelQty {
            get {
                return this.TelQtyField;
            }
            set {
                if ((this.TelQtyField.Equals(value) != true)) {
                    this.TelQtyField = value;
                    this.RaisePropertyChanged("TelQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdateTime {
            get {
                return this.UpdateTimeField;
            }
            set {
                if ((this.UpdateTimeField.Equals(value) != true)) {
                    this.UpdateTimeField = value;
                    this.RaisePropertyChanged("UpdateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdateUser {
            get {
                return this.UpdateUserField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdateUserField, value) != true)) {
                    this.UpdateUserField = value;
                    this.RaisePropertyChanged("UpdateUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VisitSction {
            get {
                return this.VisitSctionField;
            }
            set {
                if ((this.VisitSctionField.Equals(value) != true)) {
                    this.VisitSctionField = value;
                    this.RaisePropertyChanged("VisitSction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VisitType {
            get {
                return this.VisitTypeField;
            }
            set {
                if ((this.VisitTypeField.Equals(value) != true)) {
                    this.VisitTypeField = value;
                    this.RaisePropertyChanged("VisitType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WebQty {
            get {
                return this.WebQtyField;
            }
            set {
                if ((this.WebQtyField.Equals(value) != true)) {
                    this.WebQtyField = value;
                    this.RaisePropertyChanged("WebQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WindowQty {
            get {
                return this.WindowQtyField;
            }
            set {
                if ((this.WindowQtyField.Equals(value) != true)) {
                    this.WindowQtyField = value;
                    this.RaisePropertyChanged("WindowQty");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DivisionDto", Namespace="http://schemas.datacontract.org/2004/07/HisService.DrSchedule")]
    [System.SerializableAttribute()]
    public partial class DivisionDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeptNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DivCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DivEngNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DivNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DivNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DivTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmgUseTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InpUseTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsConsultationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEmergencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IsIssField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsVirtualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Keyword1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Keyword2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Keyword3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedDivNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OpdDrugDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OpdUseTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RegFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdateUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeptNo {
            get {
                return this.DeptNoField;
            }
            set {
                if ((object.ReferenceEquals(this.DeptNoField, value) != true)) {
                    this.DeptNoField = value;
                    this.RaisePropertyChanged("DeptNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DivCode {
            get {
                return this.DivCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DivCodeField, value) != true)) {
                    this.DivCodeField = value;
                    this.RaisePropertyChanged("DivCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DivEngName {
            get {
                return this.DivEngNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DivEngNameField, value) != true)) {
                    this.DivEngNameField = value;
                    this.RaisePropertyChanged("DivEngName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DivName {
            get {
                return this.DivNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DivNameField, value) != true)) {
                    this.DivNameField = value;
                    this.RaisePropertyChanged("DivName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DivNo {
            get {
                return this.DivNoField;
            }
            set {
                if ((object.ReferenceEquals(this.DivNoField, value) != true)) {
                    this.DivNoField = value;
                    this.RaisePropertyChanged("DivNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DivType {
            get {
                return this.DivTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DivTypeField, value) != true)) {
                    this.DivTypeField = value;
                    this.RaisePropertyChanged("DivType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmgUseType {
            get {
                return this.EmgUseTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.EmgUseTypeField, value) != true)) {
                    this.EmgUseTypeField = value;
                    this.RaisePropertyChanged("EmgUseType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InpUseType {
            get {
                return this.InpUseTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.InpUseTypeField, value) != true)) {
                    this.InpUseTypeField = value;
                    this.RaisePropertyChanged("InpUseType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsConsultation {
            get {
                return this.IsConsultationField;
            }
            set {
                if ((this.IsConsultationField.Equals(value) != true)) {
                    this.IsConsultationField = value;
                    this.RaisePropertyChanged("IsConsultation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEmergency {
            get {
                return this.IsEmergencyField;
            }
            set {
                if ((this.IsEmergencyField.Equals(value) != true)) {
                    this.IsEmergencyField = value;
                    this.RaisePropertyChanged("IsEmergency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IsIss {
            get {
                return this.IsIssField;
            }
            set {
                if ((this.IsIssField.Equals(value) != true)) {
                    this.IsIssField = value;
                    this.RaisePropertyChanged("IsIss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsVirtual {
            get {
                return this.IsVirtualField;
            }
            set {
                if ((this.IsVirtualField.Equals(value) != true)) {
                    this.IsVirtualField = value;
                    this.RaisePropertyChanged("IsVirtual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Keyword1 {
            get {
                return this.Keyword1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Keyword1Field, value) != true)) {
                    this.Keyword1Field = value;
                    this.RaisePropertyChanged("Keyword1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Keyword2 {
            get {
                return this.Keyword2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Keyword2Field, value) != true)) {
                    this.Keyword2Field = value;
                    this.RaisePropertyChanged("Keyword2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Keyword3 {
            get {
                return this.Keyword3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Keyword3Field, value) != true)) {
                    this.Keyword3Field = value;
                    this.RaisePropertyChanged("Keyword3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedDivNo {
            get {
                return this.MedDivNoField;
            }
            set {
                if ((object.ReferenceEquals(this.MedDivNoField, value) != true)) {
                    this.MedDivNoField = value;
                    this.RaisePropertyChanged("MedDivNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OpdDrugDays {
            get {
                return this.OpdDrugDaysField;
            }
            set {
                if ((this.OpdDrugDaysField.Equals(value) != true)) {
                    this.OpdDrugDaysField = value;
                    this.RaisePropertyChanged("OpdDrugDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OpdUseType {
            get {
                return this.OpdUseTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.OpdUseTypeField, value) != true)) {
                    this.OpdUseTypeField = value;
                    this.RaisePropertyChanged("OpdUseType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentNo {
            get {
                return this.ParentNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentNoField, value) != true)) {
                    this.ParentNoField = value;
                    this.RaisePropertyChanged("ParentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RegFee {
            get {
                return this.RegFeeField;
            }
            set {
                if ((this.RegFeeField.Equals(value) != true)) {
                    this.RegFeeField = value;
                    this.RaisePropertyChanged("RegFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UpdateTime {
            get {
                return this.UpdateTimeField;
            }
            set {
                if ((this.UpdateTimeField.Equals(value) != true)) {
                    this.UpdateTimeField = value;
                    this.RaisePropertyChanged("UpdateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdateUser {
            get {
                return this.UpdateUserField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdateUserField, value) != true)) {
                    this.UpdateUserField = value;
                    this.RaisePropertyChanged("UpdateUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zone {
            get {
                return this.ZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.ZoneField, value) != true)) {
                    this.ZoneField = value;
                    this.RaisePropertyChanged("Zone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DivisionOutOut", Namespace="http://schemas.datacontract.org/2004/07/HisService.DrSchedule")]
    [System.SerializableAttribute()]
    public partial class DivisionOutOut : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeptNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DivCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DivDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DivEngNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DivNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DivNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DivTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmgUseTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InpUseTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsConsultationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsVirtualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Keyword1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MedDivNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> OpdDrugDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OpdUseTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RegFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeptNo {
            get {
                return this.DeptNoField;
            }
            set {
                if ((object.ReferenceEquals(this.DeptNoField, value) != true)) {
                    this.DeptNoField = value;
                    this.RaisePropertyChanged("DeptNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DivCode {
            get {
                return this.DivCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DivCodeField, value) != true)) {
                    this.DivCodeField = value;
                    this.RaisePropertyChanged("DivCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DivDesc {
            get {
                return this.DivDescField;
            }
            set {
                if ((object.ReferenceEquals(this.DivDescField, value) != true)) {
                    this.DivDescField = value;
                    this.RaisePropertyChanged("DivDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DivEngName {
            get {
                return this.DivEngNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DivEngNameField, value) != true)) {
                    this.DivEngNameField = value;
                    this.RaisePropertyChanged("DivEngName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DivName {
            get {
                return this.DivNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DivNameField, value) != true)) {
                    this.DivNameField = value;
                    this.RaisePropertyChanged("DivName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DivNo {
            get {
                return this.DivNoField;
            }
            set {
                if ((object.ReferenceEquals(this.DivNoField, value) != true)) {
                    this.DivNoField = value;
                    this.RaisePropertyChanged("DivNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DivType {
            get {
                return this.DivTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DivTypeField, value) != true)) {
                    this.DivTypeField = value;
                    this.RaisePropertyChanged("DivType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmgUseType {
            get {
                return this.EmgUseTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.EmgUseTypeField, value) != true)) {
                    this.EmgUseTypeField = value;
                    this.RaisePropertyChanged("EmgUseType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InpUseType {
            get {
                return this.InpUseTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.InpUseTypeField, value) != true)) {
                    this.InpUseTypeField = value;
                    this.RaisePropertyChanged("InpUseType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsConsultation {
            get {
                return this.IsConsultationField;
            }
            set {
                if ((this.IsConsultationField.Equals(value) != true)) {
                    this.IsConsultationField = value;
                    this.RaisePropertyChanged("IsConsultation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsVirtual {
            get {
                return this.IsVirtualField;
            }
            set {
                if ((this.IsVirtualField.Equals(value) != true)) {
                    this.IsVirtualField = value;
                    this.RaisePropertyChanged("IsVirtual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Keyword1 {
            get {
                return this.Keyword1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Keyword1Field, value) != true)) {
                    this.Keyword1Field = value;
                    this.RaisePropertyChanged("Keyword1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedDivNo {
            get {
                return this.MedDivNoField;
            }
            set {
                if ((object.ReferenceEquals(this.MedDivNoField, value) != true)) {
                    this.MedDivNoField = value;
                    this.RaisePropertyChanged("MedDivNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OpdDrugDays {
            get {
                return this.OpdDrugDaysField;
            }
            set {
                if ((this.OpdDrugDaysField.Equals(value) != true)) {
                    this.OpdDrugDaysField = value;
                    this.RaisePropertyChanged("OpdDrugDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OpdUseType {
            get {
                return this.OpdUseTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.OpdUseTypeField, value) != true)) {
                    this.OpdUseTypeField = value;
                    this.RaisePropertyChanged("OpdUseType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentNo {
            get {
                return this.ParentNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentNoField, value) != true)) {
                    this.ParentNoField = value;
                    this.RaisePropertyChanged("ParentNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RegFee {
            get {
                return this.RegFeeField;
            }
            set {
                if ((this.RegFeeField.Equals(value) != true)) {
                    this.RegFeeField = value;
                    this.RaisePropertyChanged("RegFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zone {
            get {
                return this.ZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.ZoneField, value) != true)) {
                    this.ZoneField = value;
                    this.RaisePropertyChanged("Zone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DoctorOutput", Namespace="http://schemas.datacontract.org/2004/07/HisService.DrSchedule")]
    [System.SerializableAttribute()]
    public partial class DoctorOutput : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DivCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DivNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DivNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpNoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DivCode {
            get {
                return this.DivCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DivCodeField, value) != true)) {
                    this.DivCodeField = value;
                    this.RaisePropertyChanged("DivCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DivName {
            get {
                return this.DivNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DivNameField, value) != true)) {
                    this.DivNameField = value;
                    this.RaisePropertyChanged("DivName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DivNo {
            get {
                return this.DivNoField;
            }
            set {
                if ((object.ReferenceEquals(this.DivNoField, value) != true)) {
                    this.DivNoField = value;
                    this.RaisePropertyChanged("DivNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpCode {
            get {
                return this.EmpCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpCodeField, value) != true)) {
                    this.EmpCodeField = value;
                    this.RaisePropertyChanged("EmpCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpName {
            get {
                return this.EmpNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpNameField, value) != true)) {
                    this.EmpNameField = value;
                    this.RaisePropertyChanged("EmpName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpNo {
            get {
                return this.EmpNoField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpNoField, value) != true)) {
                    this.EmpNoField = value;
                    this.RaisePropertyChanged("EmpNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RoomOutput", Namespace="http://schemas.datacontract.org/2004/07/HisService.DrSchedule")]
    [System.SerializableAttribute()]
    public partial class RoomOutput : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DivNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoomCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoomNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoomNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DivNo {
            get {
                return this.DivNoField;
            }
            set {
                if ((object.ReferenceEquals(this.DivNoField, value) != true)) {
                    this.DivNoField = value;
                    this.RaisePropertyChanged("DivNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoomCode {
            get {
                return this.RoomCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RoomCodeField, value) != true)) {
                    this.RoomCodeField = value;
                    this.RaisePropertyChanged("RoomCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoomName {
            get {
                return this.RoomNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoomNameField, value) != true)) {
                    this.RoomNameField = value;
                    this.RaisePropertyChanged("RoomName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoomNo {
            get {
                return this.RoomNoField;
            }
            set {
                if ((object.ReferenceEquals(this.RoomNoField, value) != true)) {
                    this.RoomNoField = value;
                    this.RaisePropertyChanged("RoomNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zone {
            get {
                return this.ZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.ZoneField, value) != true)) {
                    this.ZoneField = value;
                    this.RaisePropertyChanged("Zone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VisitScheduleOutPut", Namespace="http://schemas.datacontract.org/2004/07/HisService.DrSchedule")]
    [System.SerializableAttribute()]
    public partial class VisitScheduleOutPut : HisProxy.DrSchedule.VisitScheduleMtDto {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DivCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DivNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoomCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoomNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DivCode {
            get {
                return this.DivCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DivCodeField, value) != true)) {
                    this.DivCodeField = value;
                    this.RaisePropertyChanged("DivCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DivName {
            get {
                return this.DivNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DivNameField, value) != true)) {
                    this.DivNameField = value;
                    this.RaisePropertyChanged("DivName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpCode {
            get {
                return this.EmpCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpCodeField, value) != true)) {
                    this.EmpCodeField = value;
                    this.RaisePropertyChanged("EmpCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpName {
            get {
                return this.EmpNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpNameField, value) != true)) {
                    this.EmpNameField = value;
                    this.RaisePropertyChanged("EmpName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoomCode {
            get {
                return this.RoomCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RoomCodeField, value) != true)) {
                    this.RoomCodeField = value;
                    this.RaisePropertyChanged("RoomCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoomName {
            get {
                return this.RoomNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoomNameField, value) != true)) {
                    this.RoomNameField = value;
                    this.RaisePropertyChanged("RoomName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VisitScheduleMtDto", Namespace="http://schemas.datacontract.org/2004/07/HisService.DrSchedule")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HisProxy.DrSchedule.VisitScheduleOutPut))]
    public partial class VisitScheduleMtDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AvgVisitTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ChargeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CheckInTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CyclesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DivNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DrNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCacncelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsHolidaysRestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSendChartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxSeqNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MedicalFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NumberTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PreWeeksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RealDrNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RegFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RegPermitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoomNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ScheduleNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdateUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VisitLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VisitSctionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VisitWeekDayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AvgVisitTime {
            get {
                return this.AvgVisitTimeField;
            }
            set {
                if ((this.AvgVisitTimeField.Equals(value) != true)) {
                    this.AvgVisitTimeField = value;
                    this.RaisePropertyChanged("AvgVisitTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ChargeType {
            get {
                return this.ChargeTypeField;
            }
            set {
                if ((this.ChargeTypeField.Equals(value) != true)) {
                    this.ChargeTypeField = value;
                    this.RaisePropertyChanged("ChargeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CheckInTime {
            get {
                return this.CheckInTimeField;
            }
            set {
                if ((this.CheckInTimeField.Equals(value) != true)) {
                    this.CheckInTimeField = value;
                    this.RaisePropertyChanged("CheckInTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Cycles {
            get {
                return this.CyclesField;
            }
            set {
                if ((this.CyclesField.Equals(value) != true)) {
                    this.CyclesField = value;
                    this.RaisePropertyChanged("Cycles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DivNo {
            get {
                return this.DivNoField;
            }
            set {
                if ((object.ReferenceEquals(this.DivNoField, value) != true)) {
                    this.DivNoField = value;
                    this.RaisePropertyChanged("DivNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DrNo {
            get {
                return this.DrNoField;
            }
            set {
                if ((object.ReferenceEquals(this.DrNoField, value) != true)) {
                    this.DrNoField = value;
                    this.RaisePropertyChanged("DrNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCacncel {
            get {
                return this.IsCacncelField;
            }
            set {
                if ((this.IsCacncelField.Equals(value) != true)) {
                    this.IsCacncelField = value;
                    this.RaisePropertyChanged("IsCacncel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsHolidaysRest {
            get {
                return this.IsHolidaysRestField;
            }
            set {
                if ((this.IsHolidaysRestField.Equals(value) != true)) {
                    this.IsHolidaysRestField = value;
                    this.RaisePropertyChanged("IsHolidaysRest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSendChart {
            get {
                return this.IsSendChartField;
            }
            set {
                if ((this.IsSendChartField.Equals(value) != true)) {
                    this.IsSendChartField = value;
                    this.RaisePropertyChanged("IsSendChart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxSeqNo {
            get {
                return this.MaxSeqNoField;
            }
            set {
                if ((this.MaxSeqNoField.Equals(value) != true)) {
                    this.MaxSeqNoField = value;
                    this.RaisePropertyChanged("MaxSeqNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MedicalFee {
            get {
                return this.MedicalFeeField;
            }
            set {
                if ((this.MedicalFeeField.Equals(value) != true)) {
                    this.MedicalFeeField = value;
                    this.RaisePropertyChanged("MedicalFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> NumberType {
            get {
                return this.NumberTypeField;
            }
            set {
                if ((this.NumberTypeField.Equals(value) != true)) {
                    this.NumberTypeField = value;
                    this.RaisePropertyChanged("NumberType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PreWeeks {
            get {
                return this.PreWeeksField;
            }
            set {
                if ((this.PreWeeksField.Equals(value) != true)) {
                    this.PreWeeksField = value;
                    this.RaisePropertyChanged("PreWeeks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RealDrNo {
            get {
                return this.RealDrNoField;
            }
            set {
                if ((object.ReferenceEquals(this.RealDrNoField, value) != true)) {
                    this.RealDrNoField = value;
                    this.RaisePropertyChanged("RealDrNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RegFee {
            get {
                return this.RegFeeField;
            }
            set {
                if ((this.RegFeeField.Equals(value) != true)) {
                    this.RegFeeField = value;
                    this.RaisePropertyChanged("RegFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RegPermit {
            get {
                return this.RegPermitField;
            }
            set {
                if ((this.RegPermitField.Equals(value) != true)) {
                    this.RegPermitField = value;
                    this.RaisePropertyChanged("RegPermit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoomNo {
            get {
                return this.RoomNoField;
            }
            set {
                if ((this.RoomNoField.Equals(value) != true)) {
                    this.RoomNoField = value;
                    this.RaisePropertyChanged("RoomNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ScheduleNo {
            get {
                return this.ScheduleNoField;
            }
            set {
                if ((this.ScheduleNoField.Equals(value) != true)) {
                    this.ScheduleNoField = value;
                    this.RaisePropertyChanged("ScheduleNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdateTime {
            get {
                return this.UpdateTimeField;
            }
            set {
                if ((this.UpdateTimeField.Equals(value) != true)) {
                    this.UpdateTimeField = value;
                    this.RaisePropertyChanged("UpdateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdateUser {
            get {
                return this.UpdateUserField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdateUserField, value) != true)) {
                    this.UpdateUserField = value;
                    this.RaisePropertyChanged("UpdateUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VisitLevel {
            get {
                return this.VisitLevelField;
            }
            set {
                if ((this.VisitLevelField.Equals(value) != true)) {
                    this.VisitLevelField = value;
                    this.RaisePropertyChanged("VisitLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VisitSction {
            get {
                return this.VisitSctionField;
            }
            set {
                if ((this.VisitSctionField.Equals(value) != true)) {
                    this.VisitSctionField = value;
                    this.RaisePropertyChanged("VisitSction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VisitWeekDay {
            get {
                return this.VisitWeekDayField;
            }
            set {
                if ((this.VisitWeekDayField.Equals(value) != true)) {
                    this.VisitWeekDayField = value;
                    this.RaisePropertyChanged("VisitWeekDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zone {
            get {
                return this.ZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.ZoneField, value) != true)) {
                    this.ZoneField = value;
                    this.RaisePropertyChanged("Zone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmployeeOutput", Namespace="http://schemas.datacontract.org/2004/07/HisService.DrSchedule")]
    [System.SerializableAttribute()]
    public partial class EmployeeOutput : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DivCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DivNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DivNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpNoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DivCode {
            get {
                return this.DivCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DivCodeField, value) != true)) {
                    this.DivCodeField = value;
                    this.RaisePropertyChanged("DivCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DivName {
            get {
                return this.DivNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DivNameField, value) != true)) {
                    this.DivNameField = value;
                    this.RaisePropertyChanged("DivName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DivNo {
            get {
                return this.DivNoField;
            }
            set {
                if ((object.ReferenceEquals(this.DivNoField, value) != true)) {
                    this.DivNoField = value;
                    this.RaisePropertyChanged("DivNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpCode {
            get {
                return this.EmpCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpCodeField, value) != true)) {
                    this.EmpCodeField = value;
                    this.RaisePropertyChanged("EmpCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpName {
            get {
                return this.EmpNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpNameField, value) != true)) {
                    this.EmpNameField = value;
                    this.RaisePropertyChanged("EmpName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpNo {
            get {
                return this.EmpNoField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpNoField, value) != true)) {
                    this.EmpNoField = value;
                    this.RaisePropertyChanged("EmpNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScheduleOutPut", Namespace="http://schemas.datacontract.org/2004/07/HisService.DrSchedule")]
    [System.SerializableAttribute()]
    public partial class ScheduleOutPut : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DivNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DivNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DrNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DrNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxSeqNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MedicalFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RegFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RegTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime VisitDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VisitSctionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VisitTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DivName {
            get {
                return this.DivNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DivNameField, value) != true)) {
                    this.DivNameField = value;
                    this.RaisePropertyChanged("DivName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DivNo {
            get {
                return this.DivNoField;
            }
            set {
                if ((object.ReferenceEquals(this.DivNoField, value) != true)) {
                    this.DivNoField = value;
                    this.RaisePropertyChanged("DivNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DrName {
            get {
                return this.DrNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DrNameField, value) != true)) {
                    this.DrNameField = value;
                    this.RaisePropertyChanged("DrName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DrNo {
            get {
                return this.DrNoField;
            }
            set {
                if ((object.ReferenceEquals(this.DrNoField, value) != true)) {
                    this.DrNoField = value;
                    this.RaisePropertyChanged("DrNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxSeqNo {
            get {
                return this.MaxSeqNoField;
            }
            set {
                if ((this.MaxSeqNoField.Equals(value) != true)) {
                    this.MaxSeqNoField = value;
                    this.RaisePropertyChanged("MaxSeqNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MedicalFee {
            get {
                return this.MedicalFeeField;
            }
            set {
                if ((this.MedicalFeeField.Equals(value) != true)) {
                    this.MedicalFeeField = value;
                    this.RaisePropertyChanged("MedicalFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RegFee {
            get {
                return this.RegFeeField;
            }
            set {
                if ((this.RegFeeField.Equals(value) != true)) {
                    this.RegFeeField = value;
                    this.RaisePropertyChanged("RegFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RegType {
            get {
                return this.RegTypeField;
            }
            set {
                if ((this.RegTypeField.Equals(value) != true)) {
                    this.RegTypeField = value;
                    this.RaisePropertyChanged("RegType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime VisitDate {
            get {
                return this.VisitDateField;
            }
            set {
                if ((this.VisitDateField.Equals(value) != true)) {
                    this.VisitDateField = value;
                    this.RaisePropertyChanged("VisitDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VisitSction {
            get {
                return this.VisitSctionField;
            }
            set {
                if ((this.VisitSctionField.Equals(value) != true)) {
                    this.VisitSctionField = value;
                    this.RaisePropertyChanged("VisitSction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VisitType {
            get {
                return this.VisitTypeField;
            }
            set {
                if ((this.VisitTypeField.Equals(value) != true)) {
                    this.VisitTypeField = value;
                    this.RaisePropertyChanged("VisitType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetVisitScheduleInput", Namespace="http://schemas.datacontract.org/2004/07/HisService.DrSchedule")]
    [System.SerializableAttribute()]
    public partial class GetVisitScheduleInput : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoomNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VisitSctionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VisitWeekDayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((object.ReferenceEquals(this.EndDateField, value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoomNo {
            get {
                return this.RoomNoField;
            }
            set {
                if ((object.ReferenceEquals(this.RoomNoField, value) != true)) {
                    this.RoomNoField = value;
                    this.RaisePropertyChanged("RoomNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((object.ReferenceEquals(this.StartDateField, value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VisitSction {
            get {
                return this.VisitSctionField;
            }
            set {
                if ((object.ReferenceEquals(this.VisitSctionField, value) != true)) {
                    this.VisitSctionField = value;
                    this.RaisePropertyChanged("VisitSction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VisitWeekDay {
            get {
                return this.VisitWeekDayField;
            }
            set {
                if ((object.ReferenceEquals(this.VisitWeekDayField, value) != true)) {
                    this.VisitWeekDayField = value;
                    this.RaisePropertyChanged("VisitWeekDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zone {
            get {
                return this.ZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.ZoneField, value) != true)) {
                    this.ZoneField = value;
                    this.RaisePropertyChanged("Zone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VisitSheduleInput", Namespace="http://schemas.datacontract.org/2004/07/HisService.DrSchedule")]
    [System.SerializableAttribute()]
    public partial class VisitSheduleInput : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DivNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DrNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoomNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VisitSctionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VisitWeekDayField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DivNo {
            get {
                return this.DivNoField;
            }
            set {
                if ((object.ReferenceEquals(this.DivNoField, value) != true)) {
                    this.DivNoField = value;
                    this.RaisePropertyChanged("DivNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DrNo {
            get {
                return this.DrNoField;
            }
            set {
                if ((object.ReferenceEquals(this.DrNoField, value) != true)) {
                    this.DrNoField = value;
                    this.RaisePropertyChanged("DrNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoomNo {
            get {
                return this.RoomNoField;
            }
            set {
                if ((object.ReferenceEquals(this.RoomNoField, value) != true)) {
                    this.RoomNoField = value;
                    this.RaisePropertyChanged("RoomNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VisitSction {
            get {
                return this.VisitSctionField;
            }
            set {
                if ((this.VisitSctionField.Equals(value) != true)) {
                    this.VisitSctionField = value;
                    this.RaisePropertyChanged("VisitSction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VisitWeekDay {
            get {
                return this.VisitWeekDayField;
            }
            set {
                if ((this.VisitWeekDayField.Equals(value) != true)) {
                    this.VisitWeekDayField = value;
                    this.RaisePropertyChanged("VisitWeekDay");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DrSheduleOutput", Namespace="http://schemas.datacontract.org/2004/07/HisService.DrSchedule")]
    [System.SerializableAttribute()]
    public partial class DrSheduleOutput : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DrNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DrNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DtVisitMarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaxSeqNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewDrCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewDrNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewDrNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberMarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoomCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoomNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScheduleNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VisitDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VisitMarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VisitSctionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VisitWeekDayField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DrCode {
            get {
                return this.DrCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DrCodeField, value) != true)) {
                    this.DrCodeField = value;
                    this.RaisePropertyChanged("DrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DrName {
            get {
                return this.DrNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DrNameField, value) != true)) {
                    this.DrNameField = value;
                    this.RaisePropertyChanged("DrName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DrNo {
            get {
                return this.DrNoField;
            }
            set {
                if ((object.ReferenceEquals(this.DrNoField, value) != true)) {
                    this.DrNoField = value;
                    this.RaisePropertyChanged("DrNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DtVisitMark {
            get {
                return this.DtVisitMarkField;
            }
            set {
                if ((object.ReferenceEquals(this.DtVisitMarkField, value) != true)) {
                    this.DtVisitMarkField = value;
                    this.RaisePropertyChanged("DtVisitMark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaxSeqNo {
            get {
                return this.MaxSeqNoField;
            }
            set {
                if ((object.ReferenceEquals(this.MaxSeqNoField, value) != true)) {
                    this.MaxSeqNoField = value;
                    this.RaisePropertyChanged("MaxSeqNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewDrCode {
            get {
                return this.NewDrCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.NewDrCodeField, value) != true)) {
                    this.NewDrCodeField = value;
                    this.RaisePropertyChanged("NewDrCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewDrName {
            get {
                return this.NewDrNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NewDrNameField, value) != true)) {
                    this.NewDrNameField = value;
                    this.RaisePropertyChanged("NewDrName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewDrNo {
            get {
                return this.NewDrNoField;
            }
            set {
                if ((object.ReferenceEquals(this.NewDrNoField, value) != true)) {
                    this.NewDrNoField = value;
                    this.RaisePropertyChanged("NewDrNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumberMark {
            get {
                return this.NumberMarkField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberMarkField, value) != true)) {
                    this.NumberMarkField = value;
                    this.RaisePropertyChanged("NumberMark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoomCode {
            get {
                return this.RoomCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RoomCodeField, value) != true)) {
                    this.RoomCodeField = value;
                    this.RaisePropertyChanged("RoomCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoomNo {
            get {
                return this.RoomNoField;
            }
            set {
                if ((object.ReferenceEquals(this.RoomNoField, value) != true)) {
                    this.RoomNoField = value;
                    this.RaisePropertyChanged("RoomNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ScheduleNo {
            get {
                return this.ScheduleNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ScheduleNoField, value) != true)) {
                    this.ScheduleNoField = value;
                    this.RaisePropertyChanged("ScheduleNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VisitDate {
            get {
                return this.VisitDateField;
            }
            set {
                if ((object.ReferenceEquals(this.VisitDateField, value) != true)) {
                    this.VisitDateField = value;
                    this.RaisePropertyChanged("VisitDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VisitMark {
            get {
                return this.VisitMarkField;
            }
            set {
                if ((object.ReferenceEquals(this.VisitMarkField, value) != true)) {
                    this.VisitMarkField = value;
                    this.RaisePropertyChanged("VisitMark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VisitSction {
            get {
                return this.VisitSctionField;
            }
            set {
                if ((object.ReferenceEquals(this.VisitSctionField, value) != true)) {
                    this.VisitSctionField = value;
                    this.RaisePropertyChanged("VisitSction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VisitWeekDay {
            get {
                return this.VisitWeekDayField;
            }
            set {
                if ((object.ReferenceEquals(this.VisitWeekDayField, value) != true)) {
                    this.VisitWeekDayField = value;
                    this.RaisePropertyChanged("VisitWeekDay");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VisitRescordOutput", Namespace="http://schemas.datacontract.org/2004/07/HisService.DrSchedule")]
    [System.SerializableAttribute()]
    public partial class VisitRescordOutput : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DivNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DivNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DrNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmpNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewDrNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewEmpNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoomCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoomNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScheduleNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VisitMarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VisitSctionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VisitWeekDayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DivName {
            get {
                return this.DivNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DivNameField, value) != true)) {
                    this.DivNameField = value;
                    this.RaisePropertyChanged("DivName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DivNo {
            get {
                return this.DivNoField;
            }
            set {
                if ((object.ReferenceEquals(this.DivNoField, value) != true)) {
                    this.DivNoField = value;
                    this.RaisePropertyChanged("DivNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DrNo {
            get {
                return this.DrNoField;
            }
            set {
                if ((object.ReferenceEquals(this.DrNoField, value) != true)) {
                    this.DrNoField = value;
                    this.RaisePropertyChanged("DrNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmpName {
            get {
                return this.EmpNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EmpNameField, value) != true)) {
                    this.EmpNameField = value;
                    this.RaisePropertyChanged("EmpName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewDrNo {
            get {
                return this.NewDrNoField;
            }
            set {
                if ((object.ReferenceEquals(this.NewDrNoField, value) != true)) {
                    this.NewDrNoField = value;
                    this.RaisePropertyChanged("NewDrNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewEmpName {
            get {
                return this.NewEmpNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NewEmpNameField, value) != true)) {
                    this.NewEmpNameField = value;
                    this.RaisePropertyChanged("NewEmpName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoomCode {
            get {
                return this.RoomCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RoomCodeField, value) != true)) {
                    this.RoomCodeField = value;
                    this.RaisePropertyChanged("RoomCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoomNo {
            get {
                return this.RoomNoField;
            }
            set {
                if ((this.RoomNoField.Equals(value) != true)) {
                    this.RoomNoField = value;
                    this.RaisePropertyChanged("RoomNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ScheduleNo {
            get {
                return this.ScheduleNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ScheduleNoField, value) != true)) {
                    this.ScheduleNoField = value;
                    this.RaisePropertyChanged("ScheduleNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VisitMark {
            get {
                return this.VisitMarkField;
            }
            set {
                if ((this.VisitMarkField.Equals(value) != true)) {
                    this.VisitMarkField = value;
                    this.RaisePropertyChanged("VisitMark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VisitSction {
            get {
                return this.VisitSctionField;
            }
            set {
                if ((this.VisitSctionField.Equals(value) != true)) {
                    this.VisitSctionField = value;
                    this.RaisePropertyChanged("VisitSction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VisitWeekDay {
            get {
                return this.VisitWeekDayField;
            }
            set {
                if ((this.VisitWeekDayField.Equals(value) != true)) {
                    this.VisitWeekDayField = value;
                    this.RaisePropertyChanged("VisitWeekDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zone {
            get {
                return this.ZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.ZoneField, value) != true)) {
                    this.ZoneField = value;
                    this.RaisePropertyChanged("Zone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VisitRestRecordDto", Namespace="http://schemas.datacontract.org/2004/07/HisService.DrSchedule")]
    [System.SerializableAttribute()]
    public partial class VisitRestRecordDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewDrNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ScheduleNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdateUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte VisitMarkField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewDrNo {
            get {
                return this.NewDrNoField;
            }
            set {
                if ((object.ReferenceEquals(this.NewDrNoField, value) != true)) {
                    this.NewDrNoField = value;
                    this.RaisePropertyChanged("NewDrNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ScheduleNo {
            get {
                return this.ScheduleNoField;
            }
            set {
                if ((this.ScheduleNoField.Equals(value) != true)) {
                    this.ScheduleNoField = value;
                    this.RaisePropertyChanged("ScheduleNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UpdateTime {
            get {
                return this.UpdateTimeField;
            }
            set {
                if ((this.UpdateTimeField.Equals(value) != true)) {
                    this.UpdateTimeField = value;
                    this.RaisePropertyChanged("UpdateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdateUser {
            get {
                return this.UpdateUserField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdateUserField, value) != true)) {
                    this.UpdateUserField = value;
                    this.RaisePropertyChanged("UpdateUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte VisitMark {
            get {
                return this.VisitMarkField;
            }
            set {
                if ((this.VisitMarkField.Equals(value) != true)) {
                    this.VisitMarkField = value;
                    this.RaisePropertyChanged("VisitMark");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DelVisitRestRecordInput", Namespace="http://schemas.datacontract.org/2004/07/HisService.DrSchedule")]
    [System.SerializableAttribute()]
    public partial class DelVisitRestRecordInput : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScheduleNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ScheduleNo {
            get {
                return this.ScheduleNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ScheduleNoField, value) != true)) {
                    this.ScheduleNoField = value;
                    this.RaisePropertyChanged("ScheduleNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateDrSchDtInput", Namespace="http://schemas.datacontract.org/2004/07/HisService.DrSchedule")]
    [System.SerializableAttribute()]
    public partial class UpdateDrSchDtInput : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrDrNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScheduleNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdateUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VisitMarkField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrDrNo {
            get {
                return this.CurrDrNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrDrNoField, value) != true)) {
                    this.CurrDrNoField = value;
                    this.RaisePropertyChanged("CurrDrNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ScheduleNo {
            get {
                return this.ScheduleNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ScheduleNoField, value) != true)) {
                    this.ScheduleNoField = value;
                    this.RaisePropertyChanged("ScheduleNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UpdateTime {
            get {
                return this.UpdateTimeField;
            }
            set {
                if ((this.UpdateTimeField.Equals(value) != true)) {
                    this.UpdateTimeField = value;
                    this.RaisePropertyChanged("UpdateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdateUser {
            get {
                return this.UpdateUserField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdateUserField, value) != true)) {
                    this.UpdateUserField = value;
                    this.RaisePropertyChanged("UpdateUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VisitMark {
            get {
                return this.VisitMarkField;
            }
            set {
                if ((object.ReferenceEquals(this.VisitMarkField, value) != true)) {
                    this.VisitMarkField = value;
                    this.RaisePropertyChanged("VisitMark");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VisitLevelSetDto", Namespace="http://schemas.datacontract.org/2004/07/HisService.DrSchedule")]
    [System.SerializableAttribute()]
    public partial class VisitLevelSetDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LevelCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LevelNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short UpdateUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemCode {
            get {
                return this.ItemCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemCodeField, value) != true)) {
                    this.ItemCodeField = value;
                    this.RaisePropertyChanged("ItemCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LevelCode {
            get {
                return this.LevelCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LevelCodeField, value) != true)) {
                    this.LevelCodeField = value;
                    this.RaisePropertyChanged("LevelCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LevelName {
            get {
                return this.LevelNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LevelNameField, value) != true)) {
                    this.LevelNameField = value;
                    this.RaisePropertyChanged("LevelName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UpdateTime {
            get {
                return this.UpdateTimeField;
            }
            set {
                if ((this.UpdateTimeField.Equals(value) != true)) {
                    this.UpdateTimeField = value;
                    this.RaisePropertyChanged("UpdateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short UpdateUser {
            get {
                return this.UpdateUserField;
            }
            set {
                if ((this.UpdateUserField.Equals(value) != true)) {
                    this.UpdateUserField = value;
                    this.RaisePropertyChanged("UpdateUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zone {
            get {
                return this.ZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.ZoneField, value) != true)) {
                    this.ZoneField = value;
                    this.RaisePropertyChanged("Zone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegisterNumber", Namespace="http://schemas.datacontract.org/2004/07/HisService.Entity")]
    [System.SerializableAttribute()]
    public partial class RegisterNumber : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberMarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short NumberTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short UpdateUserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumberMark {
            get {
                return this.NumberMarkField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberMarkField, value) != true)) {
                    this.NumberMarkField = value;
                    this.RaisePropertyChanged("NumberMark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short NumberType {
            get {
                return this.NumberTypeField;
            }
            set {
                if ((this.NumberTypeField.Equals(value) != true)) {
                    this.NumberTypeField = value;
                    this.RaisePropertyChanged("NumberType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeDesc {
            get {
                return this.TypeDescField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeDescField, value) != true)) {
                    this.TypeDescField = value;
                    this.RaisePropertyChanged("TypeDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UpdateTime {
            get {
                return this.UpdateTimeField;
            }
            set {
                if ((this.UpdateTimeField.Equals(value) != true)) {
                    this.UpdateTimeField = value;
                    this.RaisePropertyChanged("UpdateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short UpdateUser {
            get {
                return this.UpdateUserField;
            }
            set {
                if ((this.UpdateUserField.Equals(value) != true)) {
                    this.UpdateUserField = value;
                    this.RaisePropertyChanged("UpdateUser");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VisitScheduleDt", Namespace="http://schemas.datacontract.org/2004/07/HisService.Entity")]
    [System.SerializableAttribute()]
    public partial class VisitScheduleDt : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrDrNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DivNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPreorderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxSeqNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MedicalFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberMarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RegFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ScheduleNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdateUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime VisitDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VisitLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VisitLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VisitMarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VisitSctionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrDrNo {
            get {
                return this.CurrDrNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrDrNoField, value) != true)) {
                    this.CurrDrNoField = value;
                    this.RaisePropertyChanged("CurrDrNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DivNo {
            get {
                return this.DivNoField;
            }
            set {
                if ((object.ReferenceEquals(this.DivNoField, value) != true)) {
                    this.DivNoField = value;
                    this.RaisePropertyChanged("DivNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPreorder {
            get {
                return this.IsPreorderField;
            }
            set {
                if ((this.IsPreorderField.Equals(value) != true)) {
                    this.IsPreorderField = value;
                    this.RaisePropertyChanged("IsPreorder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxSeqNo {
            get {
                return this.MaxSeqNoField;
            }
            set {
                if ((this.MaxSeqNoField.Equals(value) != true)) {
                    this.MaxSeqNoField = value;
                    this.RaisePropertyChanged("MaxSeqNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MedicalFee {
            get {
                return this.MedicalFeeField;
            }
            set {
                if ((this.MedicalFeeField.Equals(value) != true)) {
                    this.MedicalFeeField = value;
                    this.RaisePropertyChanged("MedicalFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumberMark {
            get {
                return this.NumberMarkField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberMarkField, value) != true)) {
                    this.NumberMarkField = value;
                    this.RaisePropertyChanged("NumberMark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RegFee {
            get {
                return this.RegFeeField;
            }
            set {
                if ((this.RegFeeField.Equals(value) != true)) {
                    this.RegFeeField = value;
                    this.RaisePropertyChanged("RegFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ScheduleNo {
            get {
                return this.ScheduleNoField;
            }
            set {
                if ((this.ScheduleNoField.Equals(value) != true)) {
                    this.ScheduleNoField = value;
                    this.RaisePropertyChanged("ScheduleNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdateTime {
            get {
                return this.UpdateTimeField;
            }
            set {
                if ((this.UpdateTimeField.Equals(value) != true)) {
                    this.UpdateTimeField = value;
                    this.RaisePropertyChanged("UpdateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdateUser {
            get {
                return this.UpdateUserField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdateUserField, value) != true)) {
                    this.UpdateUserField = value;
                    this.RaisePropertyChanged("UpdateUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime VisitDate {
            get {
                return this.VisitDateField;
            }
            set {
                if ((this.VisitDateField.Equals(value) != true)) {
                    this.VisitDateField = value;
                    this.RaisePropertyChanged("VisitDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VisitLevel {
            get {
                return this.VisitLevelField;
            }
            set {
                if ((this.VisitLevelField.Equals(value) != true)) {
                    this.VisitLevelField = value;
                    this.RaisePropertyChanged("VisitLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VisitLocation {
            get {
                return this.VisitLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.VisitLocationField, value) != true)) {
                    this.VisitLocationField = value;
                    this.RaisePropertyChanged("VisitLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VisitMark {
            get {
                return this.VisitMarkField;
            }
            set {
                if ((this.VisitMarkField.Equals(value) != true)) {
                    this.VisitMarkField = value;
                    this.RaisePropertyChanged("VisitMark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VisitSction {
            get {
                return this.VisitSctionField;
            }
            set {
                if ((this.VisitSctionField.Equals(value) != true)) {
                    this.VisitSctionField = value;
                    this.RaisePropertyChanged("VisitSction");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DrSchedule.IDrSchedule")]
    public interface IDrSchedule {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrSchedule/GetDivRegScheduleByVisitType", ReplyAction="http://tempuri.org/IDrSchedule/GetDivRegScheduleByVisitTypeResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.DivRegScheduleDto[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.DivRegScheduleDto))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.DivisionDto[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.DivisionDto))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.DivisionOutOut[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.DivisionOutOut))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.DoctorOutput[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.DoctorOutput))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.RoomOutput[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.RoomOutput))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.VisitScheduleOutPut[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.VisitScheduleOutPut))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.VisitScheduleMtDto))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.EmployeeOutput[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.EmployeeOutput))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.ScheduleOutPut[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.ScheduleOutPut))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.GetVisitScheduleInput))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.VisitSheduleInput))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.DrSheduleOutput[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.DrSheduleOutput))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.VisitRescordOutput[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.VisitRescordOutput))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.VisitRestRecordDto))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.DelVisitRestRecordInput))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.UpdateDrSchDtInput))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.VisitLevelSetDto[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.VisitLevelSetDto))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.RegisterNumber[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.RegisterNumber))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.VisitScheduleDt[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.VisitScheduleDt))]
        HisProxy.DrSchedule.DivRegScheduleDto[] GetDivRegScheduleByVisitType(object VisitType, object DivNo);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDrSchedule/GetDivRegScheduleByVisitType", ReplyAction="http://tempuri.org/IDrSchedule/GetDivRegScheduleByVisitTypeResponse")]
        System.IAsyncResult BeginGetDivRegScheduleByVisitType(object VisitType, object DivNo, System.AsyncCallback callback, object asyncState);
        
        HisProxy.DrSchedule.DivRegScheduleDto[] EndGetDivRegScheduleByVisitType(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrSchedule/AddDivRegSchedule", ReplyAction="http://tempuri.org/IDrSchedule/AddDivRegScheduleResponse")]
        bool AddDivRegSchedule(HisProxy.DrSchedule.DivRegScheduleDto entity, System.DateTime FirstDay, int circle);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDrSchedule/AddDivRegSchedule", ReplyAction="http://tempuri.org/IDrSchedule/AddDivRegScheduleResponse")]
        System.IAsyncResult BeginAddDivRegSchedule(HisProxy.DrSchedule.DivRegScheduleDto entity, System.DateTime FirstDay, int circle, System.AsyncCallback callback, object asyncState);
        
        bool EndAddDivRegSchedule(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrSchedule/UpdateDivRegSchedule", ReplyAction="http://tempuri.org/IDrSchedule/UpdateDivRegScheduleResponse")]
        bool UpdateDivRegSchedule(HisProxy.DrSchedule.DivRegScheduleDto entity);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDrSchedule/UpdateDivRegSchedule", ReplyAction="http://tempuri.org/IDrSchedule/UpdateDivRegScheduleResponse")]
        System.IAsyncResult BeginUpdateDivRegSchedule(HisProxy.DrSchedule.DivRegScheduleDto entity, System.AsyncCallback callback, object asyncState);
        
        bool EndUpdateDivRegSchedule(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrSchedule/GetDivisionByDivCode", ReplyAction="http://tempuri.org/IDrSchedule/GetDivisionByDivCodeResponse")]
        HisProxy.DrSchedule.DivisionDto[] GetDivisionByDivCode(string DivCode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDrSchedule/GetDivisionByDivCode", ReplyAction="http://tempuri.org/IDrSchedule/GetDivisionByDivCodeResponse")]
        System.IAsyncResult BeginGetDivisionByDivCode(string DivCode, System.AsyncCallback callback, object asyncState);
        
        HisProxy.DrSchedule.DivisionDto[] EndGetDivisionByDivCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrSchedule/GetDivsionByDivNo", ReplyAction="http://tempuri.org/IDrSchedule/GetDivsionByDivNoResponse")]
        HisProxy.DrSchedule.DivisionDto[] GetDivsionByDivNo(string DivCode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDrSchedule/GetDivsionByDivNo", ReplyAction="http://tempuri.org/IDrSchedule/GetDivsionByDivNoResponse")]
        System.IAsyncResult BeginGetDivsionByDivNo(string DivCode, System.AsyncCallback callback, object asyncState);
        
        HisProxy.DrSchedule.DivisionDto[] EndGetDivsionByDivNo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrSchedule/GetDivsionAll", ReplyAction="http://tempuri.org/IDrSchedule/GetDivsionAllResponse")]
        HisProxy.DrSchedule.DivisionOutOut[] GetDivsionAll();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDrSchedule/GetDivsionAll", ReplyAction="http://tempuri.org/IDrSchedule/GetDivsionAllResponse")]
        System.IAsyncResult BeginGetDivsionAll(System.AsyncCallback callback, object asyncState);
        
        HisProxy.DrSchedule.DivisionOutOut[] EndGetDivsionAll(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrSchedule/GetDrInfoListByDivNo", ReplyAction="http://tempuri.org/IDrSchedule/GetDrInfoListByDivNoResponse")]
        HisProxy.DrSchedule.DoctorOutput[] GetDrInfoListByDivNo(string DivNo);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDrSchedule/GetDrInfoListByDivNo", ReplyAction="http://tempuri.org/IDrSchedule/GetDrInfoListByDivNoResponse")]
        System.IAsyncResult BeginGetDrInfoListByDivNo(string DivNo, System.AsyncCallback callback, object asyncState);
        
        HisProxy.DrSchedule.DoctorOutput[] EndGetDrInfoListByDivNo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrSchedule/GetRoomByRoomNo", ReplyAction="http://tempuri.org/IDrSchedule/GetRoomByRoomNoResponse")]
        HisProxy.DrSchedule.RoomOutput[] GetRoomByRoomNo(string RoomNo, string Zone);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDrSchedule/GetRoomByRoomNo", ReplyAction="http://tempuri.org/IDrSchedule/GetRoomByRoomNoResponse")]
        System.IAsyncResult BeginGetRoomByRoomNo(string RoomNo, string Zone, System.AsyncCallback callback, object asyncState);
        
        HisProxy.DrSchedule.RoomOutput[] EndGetRoomByRoomNo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrSchedule/GetRoomByRoomCode", ReplyAction="http://tempuri.org/IDrSchedule/GetRoomByRoomCodeResponse")]
        HisProxy.DrSchedule.RoomOutput[] GetRoomByRoomCode(string RoomCode, string Area);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDrSchedule/GetRoomByRoomCode", ReplyAction="http://tempuri.org/IDrSchedule/GetRoomByRoomCodeResponse")]
        System.IAsyncResult BeginGetRoomByRoomCode(string RoomCode, string Area, System.AsyncCallback callback, object asyncState);
        
        HisProxy.DrSchedule.RoomOutput[] EndGetRoomByRoomCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrSchedule/GetRoomAll", ReplyAction="http://tempuri.org/IDrSchedule/GetRoomAllResponse")]
        HisProxy.DrSchedule.RoomOutput[] GetRoomAll();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDrSchedule/GetRoomAll", ReplyAction="http://tempuri.org/IDrSchedule/GetRoomAllResponse")]
        System.IAsyncResult BeginGetRoomAll(System.AsyncCallback callback, object asyncState);
        
        HisProxy.DrSchedule.RoomOutput[] EndGetRoomAll(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrSchedule/GetRoomByDivNo", ReplyAction="http://tempuri.org/IDrSchedule/GetRoomByDivNoResponse")]
        HisProxy.DrSchedule.RoomOutput[] GetRoomByDivNo(string DivNo);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDrSchedule/GetRoomByDivNo", ReplyAction="http://tempuri.org/IDrSchedule/GetRoomByDivNoResponse")]
        System.IAsyncResult BeginGetRoomByDivNo(string DivNo, System.AsyncCallback callback, object asyncState);
        
        HisProxy.DrSchedule.RoomOutput[] EndGetRoomByDivNo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrSchedule/GetDrVisitScheduleMtListByDrNo", ReplyAction="http://tempuri.org/IDrSchedule/GetDrVisitScheduleMtListByDrNoResponse")]
        HisProxy.DrSchedule.VisitScheduleOutPut[] GetDrVisitScheduleMtListByDrNo(string zone, string DrNo);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDrSchedule/GetDrVisitScheduleMtListByDrNo", ReplyAction="http://tempuri.org/IDrSchedule/GetDrVisitScheduleMtListByDrNoResponse")]
        System.IAsyncResult BeginGetDrVisitScheduleMtListByDrNo(string zone, string DrNo, System.AsyncCallback callback, object asyncState);
        
        HisProxy.DrSchedule.VisitScheduleOutPut[] EndGetDrVisitScheduleMtListByDrNo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrSchedule/GetRegNumAll", ReplyAction="http://tempuri.org/IDrSchedule/GetRegNumAllResponse")]
        HisProxy.DrSchedule.RegisterNumber[] GetRegNumAll();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDrSchedule/GetRegNumAll", ReplyAction="http://tempuri.org/IDrSchedule/GetRegNumAllResponse")]
        System.IAsyncResult BeginGetRegNumAll(System.AsyncCallback callback, object asyncState);
        
        HisProxy.DrSchedule.RegisterNumber[] EndGetRegNumAll(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrSchedule/GetEmpByDrCode", ReplyAction="http://tempuri.org/IDrSchedule/GetEmpByDrCodeResponse")]
        HisProxy.DrSchedule.EmployeeOutput[] GetEmpByDrCode(string DrCode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDrSchedule/GetEmpByDrCode", ReplyAction="http://tempuri.org/IDrSchedule/GetEmpByDrCodeResponse")]
        System.IAsyncResult BeginGetEmpByDrCode(string DrCode, System.AsyncCallback callback, object asyncState);
        
        HisProxy.DrSchedule.EmployeeOutput[] EndGetEmpByDrCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrSchedule/GetEmpByDrNo", ReplyAction="http://tempuri.org/IDrSchedule/GetEmpByDrNoResponse")]
        HisProxy.DrSchedule.EmployeeOutput[] GetEmpByDrNo(string DrNo);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDrSchedule/GetEmpByDrNo", ReplyAction="http://tempuri.org/IDrSchedule/GetEmpByDrNoResponse")]
        System.IAsyncResult BeginGetEmpByDrNo(string DrNo, System.AsyncCallback callback, object asyncState);
        
        HisProxy.DrSchedule.EmployeeOutput[] EndGetEmpByDrNo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrSchedule/GetDrVisitScheduleMtByScheduleId", ReplyAction="http://tempuri.org/IDrSchedule/GetDrVisitScheduleMtByScheduleIdResponse")]
        HisProxy.DrSchedule.VisitScheduleOutPut[] GetDrVisitScheduleMtByScheduleId(string ScheduleNo);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDrSchedule/GetDrVisitScheduleMtByScheduleId", ReplyAction="http://tempuri.org/IDrSchedule/GetDrVisitScheduleMtByScheduleIdResponse")]
        System.IAsyncResult BeginGetDrVisitScheduleMtByScheduleId(string ScheduleNo, System.AsyncCallback callback, object asyncState);
        
        HisProxy.DrSchedule.VisitScheduleOutPut[] EndGetDrVisitScheduleMtByScheduleId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrSchedule/GetDrScheduleDtByScheduleId", ReplyAction="http://tempuri.org/IDrSchedule/GetDrScheduleDtByScheduleIdResponse")]
        HisProxy.DrSchedule.VisitScheduleDt[] GetDrScheduleDtByScheduleId(string ScheduleNo);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDrSchedule/GetDrScheduleDtByScheduleId", ReplyAction="http://tempuri.org/IDrSchedule/GetDrScheduleDtByScheduleIdResponse")]
        System.IAsyncResult BeginGetDrScheduleDtByScheduleId(string ScheduleNo, System.AsyncCallback callback, object asyncState);
        
        HisProxy.DrSchedule.VisitScheduleDt[] EndGetDrScheduleDtByScheduleId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrSchedule/GetDiviSionDrByEmpCode", ReplyAction="http://tempuri.org/IDrSchedule/GetDiviSionDrByEmpCodeResponse")]
        HisProxy.DrSchedule.EmployeeOutput[] GetDiviSionDrByEmpCode(string EmpCode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDrSchedule/GetDiviSionDrByEmpCode", ReplyAction="http://tempuri.org/IDrSchedule/GetDiviSionDrByEmpCodeResponse")]
        System.IAsyncResult BeginGetDiviSionDrByEmpCode(string EmpCode, System.AsyncCallback callback, object asyncState);
        
        HisProxy.DrSchedule.EmployeeOutput[] EndGetDiviSionDrByEmpCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrSchedule/GetDivScheduleByDate", ReplyAction="http://tempuri.org/IDrSchedule/GetDivScheduleByDateResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.DivRegScheduleDto[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.DivRegScheduleDto))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.DivisionDto[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.DivisionDto))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.DivisionOutOut[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.DivisionOutOut))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.DoctorOutput[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.DoctorOutput))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.RoomOutput[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.RoomOutput))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.VisitScheduleOutPut[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.VisitScheduleOutPut))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.VisitScheduleMtDto))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.EmployeeOutput[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.EmployeeOutput))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.ScheduleOutPut[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.ScheduleOutPut))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.GetVisitScheduleInput))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.VisitSheduleInput))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.DrSheduleOutput[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.DrSheduleOutput))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.VisitRescordOutput[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.VisitRescordOutput))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.VisitRestRecordDto))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.DelVisitRestRecordInput))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.UpdateDrSchDtInput))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.VisitLevelSetDto[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.VisitLevelSetDto))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.RegisterNumber[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.RegisterNumber))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.VisitScheduleDt[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(HisProxy.DrSchedule.VisitScheduleDt))]
        HisProxy.DrSchedule.ScheduleOutPut[] GetDivScheduleByDate(object date);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDrSchedule/GetDivScheduleByDate", ReplyAction="http://tempuri.org/IDrSchedule/GetDivScheduleByDateResponse")]
        System.IAsyncResult BeginGetDivScheduleByDate(object date, System.AsyncCallback callback, object asyncState);
        
        HisProxy.DrSchedule.ScheduleOutPut[] EndGetDivScheduleByDate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrSchedule/GetMasterScheduleByDate", ReplyAction="http://tempuri.org/IDrSchedule/GetMasterScheduleByDateResponse")]
        HisProxy.DrSchedule.ScheduleOutPut[] GetMasterScheduleByDate(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDrSchedule/GetMasterScheduleByDate", ReplyAction="http://tempuri.org/IDrSchedule/GetMasterScheduleByDateResponse")]
        System.IAsyncResult BeginGetMasterScheduleByDate(System.DateTime date, System.AsyncCallback callback, object asyncState);
        
        HisProxy.DrSchedule.ScheduleOutPut[] EndGetMasterScheduleByDate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrSchedule/IsRoomUsing", ReplyAction="http://tempuri.org/IDrSchedule/IsRoomUsingResponse")]
        bool IsRoomUsing(HisProxy.DrSchedule.GetVisitScheduleInput input);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDrSchedule/IsRoomUsing", ReplyAction="http://tempuri.org/IDrSchedule/IsRoomUsingResponse")]
        System.IAsyncResult BeginIsRoomUsing(HisProxy.DrSchedule.GetVisitScheduleInput input, System.AsyncCallback callback, object asyncState);
        
        bool EndIsRoomUsing(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrSchedule/GetVisitScheduleMt", ReplyAction="http://tempuri.org/IDrSchedule/GetVisitScheduleMtResponse")]
        HisProxy.DrSchedule.VisitScheduleMtDto GetVisitScheduleMt(HisProxy.DrSchedule.VisitSheduleInput input);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDrSchedule/GetVisitScheduleMt", ReplyAction="http://tempuri.org/IDrSchedule/GetVisitScheduleMtResponse")]
        System.IAsyncResult BeginGetVisitScheduleMt(HisProxy.DrSchedule.VisitSheduleInput input, System.AsyncCallback callback, object asyncState);
        
        HisProxy.DrSchedule.VisitScheduleMtDto EndGetVisitScheduleMt(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrSchedule/GetDrDtListByDrSchDtNo", ReplyAction="http://tempuri.org/IDrSchedule/GetDrDtListByDrSchDtNoResponse")]
        HisProxy.DrSchedule.DrSheduleOutput[] GetDrDtListByDrSchDtNo(string ScheduleNo, string Zone, System.DateTime VisitDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDrSchedule/GetDrDtListByDrSchDtNo", ReplyAction="http://tempuri.org/IDrSchedule/GetDrDtListByDrSchDtNoResponse")]
        System.IAsyncResult BeginGetDrDtListByDrSchDtNo(string ScheduleNo, string Zone, System.DateTime VisitDate, System.AsyncCallback callback, object asyncState);
        
        HisProxy.DrSchedule.DrSheduleOutput[] EndGetDrDtListByDrSchDtNo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrSchedule/GetVisitRescordList", ReplyAction="http://tempuri.org/IDrSchedule/GetVisitRescordListResponse")]
        HisProxy.DrSchedule.VisitRescordOutput[] GetVisitRescordList(string Zone, System.DateTime StartDate, System.DateTime EndDate, string DrNo);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDrSchedule/GetVisitRescordList", ReplyAction="http://tempuri.org/IDrSchedule/GetVisitRescordListResponse")]
        System.IAsyncResult BeginGetVisitRescordList(string Zone, System.DateTime StartDate, System.DateTime EndDate, string DrNo, System.AsyncCallback callback, object asyncState);
        
        HisProxy.DrSchedule.VisitRescordOutput[] EndGetVisitRescordList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrSchedule/GetDrScheduleDtByDate", ReplyAction="http://tempuri.org/IDrSchedule/GetDrScheduleDtByDateResponse")]
        HisProxy.DrSchedule.DrSheduleOutput[] GetDrScheduleDtByDate(string CurrDrNo, string Zone, System.DateTime StartDate, System.DateTime EndDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDrSchedule/GetDrScheduleDtByDate", ReplyAction="http://tempuri.org/IDrSchedule/GetDrScheduleDtByDateResponse")]
        System.IAsyncResult BeginGetDrScheduleDtByDate(string CurrDrNo, string Zone, System.DateTime StartDate, System.DateTime EndDate, System.AsyncCallback callback, object asyncState);
        
        HisProxy.DrSchedule.DrSheduleOutput[] EndGetDrScheduleDtByDate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrSchedule/InsertVisitRestRecord", ReplyAction="http://tempuri.org/IDrSchedule/InsertVisitRestRecordResponse")]
        bool InsertVisitRestRecord(HisProxy.DrSchedule.VisitRestRecordDto dto);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDrSchedule/InsertVisitRestRecord", ReplyAction="http://tempuri.org/IDrSchedule/InsertVisitRestRecordResponse")]
        System.IAsyncResult BeginInsertVisitRestRecord(HisProxy.DrSchedule.VisitRestRecordDto dto, System.AsyncCallback callback, object asyncState);
        
        bool EndInsertVisitRestRecord(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrSchedule/InsertVisitScheduleMt", ReplyAction="http://tempuri.org/IDrSchedule/InsertVisitScheduleMtResponse")]
        long InsertVisitScheduleMt(HisProxy.DrSchedule.VisitScheduleMtDto dto);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDrSchedule/InsertVisitScheduleMt", ReplyAction="http://tempuri.org/IDrSchedule/InsertVisitScheduleMtResponse")]
        System.IAsyncResult BeginInsertVisitScheduleMt(HisProxy.DrSchedule.VisitScheduleMtDto dto, System.AsyncCallback callback, object asyncState);
        
        long EndInsertVisitScheduleMt(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrSchedule/UpdteVisitScheduleMt", ReplyAction="http://tempuri.org/IDrSchedule/UpdteVisitScheduleMtResponse")]
        bool UpdteVisitScheduleMt(HisProxy.DrSchedule.VisitScheduleMtDto dto);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDrSchedule/UpdteVisitScheduleMt", ReplyAction="http://tempuri.org/IDrSchedule/UpdteVisitScheduleMtResponse")]
        System.IAsyncResult BeginUpdteVisitScheduleMt(HisProxy.DrSchedule.VisitScheduleMtDto dto, System.AsyncCallback callback, object asyncState);
        
        bool EndUpdteVisitScheduleMt(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrSchedule/UpdateVisitDrSchDt", ReplyAction="http://tempuri.org/IDrSchedule/UpdateVisitDrSchDtResponse")]
        bool UpdateVisitDrSchDt(System.Data.DataTable ot);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDrSchedule/UpdateVisitDrSchDt", ReplyAction="http://tempuri.org/IDrSchedule/UpdateVisitDrSchDtResponse")]
        System.IAsyncResult BeginUpdateVisitDrSchDt(System.Data.DataTable ot, System.AsyncCallback callback, object asyncState);
        
        bool EndUpdateVisitDrSchDt(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrSchedule/UpdateVisitRecord", ReplyAction="http://tempuri.org/IDrSchedule/UpdateVisitRecordResponse")]
        bool UpdateVisitRecord(HisProxy.DrSchedule.VisitRestRecordDto ot);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDrSchedule/UpdateVisitRecord", ReplyAction="http://tempuri.org/IDrSchedule/UpdateVisitRecordResponse")]
        System.IAsyncResult BeginUpdateVisitRecord(HisProxy.DrSchedule.VisitRestRecordDto ot, System.AsyncCallback callback, object asyncState);
        
        bool EndUpdateVisitRecord(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrSchedule/DelVisitRestRecord", ReplyAction="http://tempuri.org/IDrSchedule/DelVisitRestRecordResponse")]
        bool DelVisitRestRecord(HisProxy.DrSchedule.DelVisitRestRecordInput input);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDrSchedule/DelVisitRestRecord", ReplyAction="http://tempuri.org/IDrSchedule/DelVisitRestRecordResponse")]
        System.IAsyncResult BeginDelVisitRestRecord(HisProxy.DrSchedule.DelVisitRestRecordInput input, System.AsyncCallback callback, object asyncState);
        
        bool EndDelVisitRestRecord(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrSchedule/UpdateDrSchDtFromVisitRest", ReplyAction="http://tempuri.org/IDrSchedule/UpdateDrSchDtFromVisitRestResponse")]
        bool UpdateDrSchDtFromVisitRest(HisProxy.DrSchedule.UpdateDrSchDtInput input);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDrSchedule/UpdateDrSchDtFromVisitRest", ReplyAction="http://tempuri.org/IDrSchedule/UpdateDrSchDtFromVisitRestResponse")]
        System.IAsyncResult BeginUpdateDrSchDtFromVisitRest(HisProxy.DrSchedule.UpdateDrSchDtInput input, System.AsyncCallback callback, object asyncState);
        
        bool EndUpdateDrSchDtFromVisitRest(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrSchedule/GetDrVisitSchMtListByRoomNo", ReplyAction="http://tempuri.org/IDrSchedule/GetDrVisitSchMtListByRoomNoResponse")]
        HisProxy.DrSchedule.VisitScheduleOutPut[] GetDrVisitSchMtListByRoomNo(string Zone, string RoomNo);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDrSchedule/GetDrVisitSchMtListByRoomNo", ReplyAction="http://tempuri.org/IDrSchedule/GetDrVisitSchMtListByRoomNoResponse")]
        System.IAsyncResult BeginGetDrVisitSchMtListByRoomNo(string Zone, string RoomNo, System.AsyncCallback callback, object asyncState);
        
        HisProxy.DrSchedule.VisitScheduleOutPut[] EndGetDrVisitSchMtListByRoomNo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrSchedule/GetVisitLevelSetByLevelCode", ReplyAction="http://tempuri.org/IDrSchedule/GetVisitLevelSetByLevelCodeResponse")]
        HisProxy.DrSchedule.VisitLevelSetDto[] GetVisitLevelSetByLevelCode(string LevelCode, string Zone);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDrSchedule/GetVisitLevelSetByLevelCode", ReplyAction="http://tempuri.org/IDrSchedule/GetVisitLevelSetByLevelCodeResponse")]
        System.IAsyncResult BeginGetVisitLevelSetByLevelCode(string LevelCode, string Zone, System.AsyncCallback callback, object asyncState);
        
        HisProxy.DrSchedule.VisitLevelSetDto[] EndGetVisitLevelSetByLevelCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrSchedule/QueryDrScheduleDtByDate", ReplyAction="http://tempuri.org/IDrSchedule/QueryDrScheduleDtByDateResponse")]
        System.Data.DataTable QueryDrScheduleDtByDate(string EmpCode, System.DateTime StartDate, System.DateTime EndDate, string Zone);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDrSchedule/QueryDrScheduleDtByDate", ReplyAction="http://tempuri.org/IDrSchedule/QueryDrScheduleDtByDateResponse")]
        System.IAsyncResult BeginQueryDrScheduleDtByDate(string EmpCode, System.DateTime StartDate, System.DateTime EndDate, string Zone, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataTable EndQueryDrScheduleDtByDate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrSchedule/QueryVisitRecordbyDrCode", ReplyAction="http://tempuri.org/IDrSchedule/QueryVisitRecordbyDrCodeResponse")]
        System.Data.DataTable QueryVisitRecordbyDrCode(string DrCode, string Zone, System.DateTime StartDate, System.DateTime EndDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDrSchedule/QueryVisitRecordbyDrCode", ReplyAction="http://tempuri.org/IDrSchedule/QueryVisitRecordbyDrCodeResponse")]
        System.IAsyncResult BeginQueryVisitRecordbyDrCode(string DrCode, string Zone, System.DateTime StartDate, System.DateTime EndDate, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataTable EndQueryVisitRecordbyDrCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrSchedule/QueryProductbyItemCode", ReplyAction="http://tempuri.org/IDrSchedule/QueryProductbyItemCodeResponse")]
        System.Data.DataTable QueryProductbyItemCode(string ItemCode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDrSchedule/QueryProductbyItemCode", ReplyAction="http://tempuri.org/IDrSchedule/QueryProductbyItemCodeResponse")]
        System.IAsyncResult BeginQueryProductbyItemCode(string ItemCode, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataTable EndQueryProductbyItemCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrSchedule/QueryVisit", ReplyAction="http://tempuri.org/IDrSchedule/QueryVisitResponse")]
        int QueryVisit(string Zone, string VisitDate, string VisitSction, string RoomNo);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDrSchedule/QueryVisit", ReplyAction="http://tempuri.org/IDrSchedule/QueryVisitResponse")]
        System.IAsyncResult BeginQueryVisit(string Zone, string VisitDate, string VisitSction, string RoomNo, System.AsyncCallback callback, object asyncState);
        
        int EndQueryVisit(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDrSchedule/SetDrSchMt", ReplyAction="http://tempuri.org/IDrSchedule/SetDrSchMtResponse")]
        bool SetDrSchMt(HisProxy.DrSchedule.VisitScheduleMtDto dto);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDrSchedule/SetDrSchMt", ReplyAction="http://tempuri.org/IDrSchedule/SetDrSchMtResponse")]
        System.IAsyncResult BeginSetDrSchMt(HisProxy.DrSchedule.VisitScheduleMtDto dto, System.AsyncCallback callback, object asyncState);
        
        bool EndSetDrSchMt(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDrScheduleChannel : HisProxy.DrSchedule.IDrSchedule, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDivRegScheduleByVisitTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDivRegScheduleByVisitTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public HisProxy.DrSchedule.DivRegScheduleDto[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((HisProxy.DrSchedule.DivRegScheduleDto[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddDivRegScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddDivRegScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateDivRegScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateDivRegScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDivisionByDivCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDivisionByDivCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public HisProxy.DrSchedule.DivisionDto[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((HisProxy.DrSchedule.DivisionDto[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDivsionByDivNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDivsionByDivNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public HisProxy.DrSchedule.DivisionDto[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((HisProxy.DrSchedule.DivisionDto[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDivsionAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDivsionAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public HisProxy.DrSchedule.DivisionOutOut[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((HisProxy.DrSchedule.DivisionOutOut[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDrInfoListByDivNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDrInfoListByDivNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public HisProxy.DrSchedule.DoctorOutput[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((HisProxy.DrSchedule.DoctorOutput[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRoomByRoomNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRoomByRoomNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public HisProxy.DrSchedule.RoomOutput[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((HisProxy.DrSchedule.RoomOutput[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRoomByRoomCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRoomByRoomCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public HisProxy.DrSchedule.RoomOutput[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((HisProxy.DrSchedule.RoomOutput[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRoomAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRoomAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public HisProxy.DrSchedule.RoomOutput[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((HisProxy.DrSchedule.RoomOutput[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRoomByDivNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRoomByDivNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public HisProxy.DrSchedule.RoomOutput[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((HisProxy.DrSchedule.RoomOutput[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDrVisitScheduleMtListByDrNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDrVisitScheduleMtListByDrNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public HisProxy.DrSchedule.VisitScheduleOutPut[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((HisProxy.DrSchedule.VisitScheduleOutPut[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRegNumAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRegNumAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public HisProxy.DrSchedule.RegisterNumber[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((HisProxy.DrSchedule.RegisterNumber[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetEmpByDrCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetEmpByDrCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public HisProxy.DrSchedule.EmployeeOutput[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((HisProxy.DrSchedule.EmployeeOutput[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetEmpByDrNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetEmpByDrNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public HisProxy.DrSchedule.EmployeeOutput[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((HisProxy.DrSchedule.EmployeeOutput[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDrVisitScheduleMtByScheduleIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDrVisitScheduleMtByScheduleIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public HisProxy.DrSchedule.VisitScheduleOutPut[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((HisProxy.DrSchedule.VisitScheduleOutPut[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDrScheduleDtByScheduleIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDrScheduleDtByScheduleIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public HisProxy.DrSchedule.VisitScheduleDt[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((HisProxy.DrSchedule.VisitScheduleDt[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDiviSionDrByEmpCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDiviSionDrByEmpCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public HisProxy.DrSchedule.EmployeeOutput[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((HisProxy.DrSchedule.EmployeeOutput[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDivScheduleByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDivScheduleByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public HisProxy.DrSchedule.ScheduleOutPut[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((HisProxy.DrSchedule.ScheduleOutPut[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMasterScheduleByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMasterScheduleByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public HisProxy.DrSchedule.ScheduleOutPut[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((HisProxy.DrSchedule.ScheduleOutPut[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsRoomUsingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsRoomUsingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetVisitScheduleMtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetVisitScheduleMtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public HisProxy.DrSchedule.VisitScheduleMtDto Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((HisProxy.DrSchedule.VisitScheduleMtDto)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDrDtListByDrSchDtNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDrDtListByDrSchDtNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public HisProxy.DrSchedule.DrSheduleOutput[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((HisProxy.DrSchedule.DrSheduleOutput[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetVisitRescordListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetVisitRescordListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public HisProxy.DrSchedule.VisitRescordOutput[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((HisProxy.DrSchedule.VisitRescordOutput[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDrScheduleDtByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDrScheduleDtByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public HisProxy.DrSchedule.DrSheduleOutput[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((HisProxy.DrSchedule.DrSheduleOutput[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertVisitRestRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertVisitRestRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertVisitScheduleMtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertVisitScheduleMtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public long Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdteVisitScheduleMtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdteVisitScheduleMtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateVisitDrSchDtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateVisitDrSchDtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateVisitRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateVisitRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DelVisitRestRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DelVisitRestRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateDrSchDtFromVisitRestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateDrSchDtFromVisitRestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDrVisitSchMtListByRoomNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDrVisitSchMtListByRoomNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public HisProxy.DrSchedule.VisitScheduleOutPut[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((HisProxy.DrSchedule.VisitScheduleOutPut[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetVisitLevelSetByLevelCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetVisitLevelSetByLevelCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public HisProxy.DrSchedule.VisitLevelSetDto[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((HisProxy.DrSchedule.VisitLevelSetDto[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QueryDrScheduleDtByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public QueryDrScheduleDtByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QueryVisitRecordbyDrCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public QueryVisitRecordbyDrCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QueryProductbyItemCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public QueryProductbyItemCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QueryVisitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public QueryVisitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetDrSchMtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetDrSchMtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DrScheduleClient : System.ServiceModel.ClientBase<HisProxy.DrSchedule.IDrSchedule>, HisProxy.DrSchedule.IDrSchedule {
        
        private BeginOperationDelegate onBeginGetDivRegScheduleByVisitTypeDelegate;
        
        private EndOperationDelegate onEndGetDivRegScheduleByVisitTypeDelegate;
        
        private System.Threading.SendOrPostCallback onGetDivRegScheduleByVisitTypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddDivRegScheduleDelegate;
        
        private EndOperationDelegate onEndAddDivRegScheduleDelegate;
        
        private System.Threading.SendOrPostCallback onAddDivRegScheduleCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateDivRegScheduleDelegate;
        
        private EndOperationDelegate onEndUpdateDivRegScheduleDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateDivRegScheduleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDivisionByDivCodeDelegate;
        
        private EndOperationDelegate onEndGetDivisionByDivCodeDelegate;
        
        private System.Threading.SendOrPostCallback onGetDivisionByDivCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDivsionByDivNoDelegate;
        
        private EndOperationDelegate onEndGetDivsionByDivNoDelegate;
        
        private System.Threading.SendOrPostCallback onGetDivsionByDivNoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDivsionAllDelegate;
        
        private EndOperationDelegate onEndGetDivsionAllDelegate;
        
        private System.Threading.SendOrPostCallback onGetDivsionAllCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDrInfoListByDivNoDelegate;
        
        private EndOperationDelegate onEndGetDrInfoListByDivNoDelegate;
        
        private System.Threading.SendOrPostCallback onGetDrInfoListByDivNoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRoomByRoomNoDelegate;
        
        private EndOperationDelegate onEndGetRoomByRoomNoDelegate;
        
        private System.Threading.SendOrPostCallback onGetRoomByRoomNoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRoomByRoomCodeDelegate;
        
        private EndOperationDelegate onEndGetRoomByRoomCodeDelegate;
        
        private System.Threading.SendOrPostCallback onGetRoomByRoomCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRoomAllDelegate;
        
        private EndOperationDelegate onEndGetRoomAllDelegate;
        
        private System.Threading.SendOrPostCallback onGetRoomAllCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRoomByDivNoDelegate;
        
        private EndOperationDelegate onEndGetRoomByDivNoDelegate;
        
        private System.Threading.SendOrPostCallback onGetRoomByDivNoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDrVisitScheduleMtListByDrNoDelegate;
        
        private EndOperationDelegate onEndGetDrVisitScheduleMtListByDrNoDelegate;
        
        private System.Threading.SendOrPostCallback onGetDrVisitScheduleMtListByDrNoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRegNumAllDelegate;
        
        private EndOperationDelegate onEndGetRegNumAllDelegate;
        
        private System.Threading.SendOrPostCallback onGetRegNumAllCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetEmpByDrCodeDelegate;
        
        private EndOperationDelegate onEndGetEmpByDrCodeDelegate;
        
        private System.Threading.SendOrPostCallback onGetEmpByDrCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetEmpByDrNoDelegate;
        
        private EndOperationDelegate onEndGetEmpByDrNoDelegate;
        
        private System.Threading.SendOrPostCallback onGetEmpByDrNoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDrVisitScheduleMtByScheduleIdDelegate;
        
        private EndOperationDelegate onEndGetDrVisitScheduleMtByScheduleIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetDrVisitScheduleMtByScheduleIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDrScheduleDtByScheduleIdDelegate;
        
        private EndOperationDelegate onEndGetDrScheduleDtByScheduleIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetDrScheduleDtByScheduleIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDiviSionDrByEmpCodeDelegate;
        
        private EndOperationDelegate onEndGetDiviSionDrByEmpCodeDelegate;
        
        private System.Threading.SendOrPostCallback onGetDiviSionDrByEmpCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDivScheduleByDateDelegate;
        
        private EndOperationDelegate onEndGetDivScheduleByDateDelegate;
        
        private System.Threading.SendOrPostCallback onGetDivScheduleByDateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMasterScheduleByDateDelegate;
        
        private EndOperationDelegate onEndGetMasterScheduleByDateDelegate;
        
        private System.Threading.SendOrPostCallback onGetMasterScheduleByDateCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsRoomUsingDelegate;
        
        private EndOperationDelegate onEndIsRoomUsingDelegate;
        
        private System.Threading.SendOrPostCallback onIsRoomUsingCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetVisitScheduleMtDelegate;
        
        private EndOperationDelegate onEndGetVisitScheduleMtDelegate;
        
        private System.Threading.SendOrPostCallback onGetVisitScheduleMtCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDrDtListByDrSchDtNoDelegate;
        
        private EndOperationDelegate onEndGetDrDtListByDrSchDtNoDelegate;
        
        private System.Threading.SendOrPostCallback onGetDrDtListByDrSchDtNoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetVisitRescordListDelegate;
        
        private EndOperationDelegate onEndGetVisitRescordListDelegate;
        
        private System.Threading.SendOrPostCallback onGetVisitRescordListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDrScheduleDtByDateDelegate;
        
        private EndOperationDelegate onEndGetDrScheduleDtByDateDelegate;
        
        private System.Threading.SendOrPostCallback onGetDrScheduleDtByDateCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertVisitRestRecordDelegate;
        
        private EndOperationDelegate onEndInsertVisitRestRecordDelegate;
        
        private System.Threading.SendOrPostCallback onInsertVisitRestRecordCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertVisitScheduleMtDelegate;
        
        private EndOperationDelegate onEndInsertVisitScheduleMtDelegate;
        
        private System.Threading.SendOrPostCallback onInsertVisitScheduleMtCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdteVisitScheduleMtDelegate;
        
        private EndOperationDelegate onEndUpdteVisitScheduleMtDelegate;
        
        private System.Threading.SendOrPostCallback onUpdteVisitScheduleMtCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateVisitDrSchDtDelegate;
        
        private EndOperationDelegate onEndUpdateVisitDrSchDtDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateVisitDrSchDtCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateVisitRecordDelegate;
        
        private EndOperationDelegate onEndUpdateVisitRecordDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateVisitRecordCompletedDelegate;
        
        private BeginOperationDelegate onBeginDelVisitRestRecordDelegate;
        
        private EndOperationDelegate onEndDelVisitRestRecordDelegate;
        
        private System.Threading.SendOrPostCallback onDelVisitRestRecordCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateDrSchDtFromVisitRestDelegate;
        
        private EndOperationDelegate onEndUpdateDrSchDtFromVisitRestDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateDrSchDtFromVisitRestCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDrVisitSchMtListByRoomNoDelegate;
        
        private EndOperationDelegate onEndGetDrVisitSchMtListByRoomNoDelegate;
        
        private System.Threading.SendOrPostCallback onGetDrVisitSchMtListByRoomNoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetVisitLevelSetByLevelCodeDelegate;
        
        private EndOperationDelegate onEndGetVisitLevelSetByLevelCodeDelegate;
        
        private System.Threading.SendOrPostCallback onGetVisitLevelSetByLevelCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginQueryDrScheduleDtByDateDelegate;
        
        private EndOperationDelegate onEndQueryDrScheduleDtByDateDelegate;
        
        private System.Threading.SendOrPostCallback onQueryDrScheduleDtByDateCompletedDelegate;
        
        private BeginOperationDelegate onBeginQueryVisitRecordbyDrCodeDelegate;
        
        private EndOperationDelegate onEndQueryVisitRecordbyDrCodeDelegate;
        
        private System.Threading.SendOrPostCallback onQueryVisitRecordbyDrCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginQueryProductbyItemCodeDelegate;
        
        private EndOperationDelegate onEndQueryProductbyItemCodeDelegate;
        
        private System.Threading.SendOrPostCallback onQueryProductbyItemCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginQueryVisitDelegate;
        
        private EndOperationDelegate onEndQueryVisitDelegate;
        
        private System.Threading.SendOrPostCallback onQueryVisitCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetDrSchMtDelegate;
        
        private EndOperationDelegate onEndSetDrSchMtDelegate;
        
        private System.Threading.SendOrPostCallback onSetDrSchMtCompletedDelegate;
        
        public DrScheduleClient() {
        }
        
        public DrScheduleClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DrScheduleClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DrScheduleClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DrScheduleClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetDivRegScheduleByVisitTypeCompletedEventArgs> GetDivRegScheduleByVisitTypeCompleted;
        
        public event System.EventHandler<AddDivRegScheduleCompletedEventArgs> AddDivRegScheduleCompleted;
        
        public event System.EventHandler<UpdateDivRegScheduleCompletedEventArgs> UpdateDivRegScheduleCompleted;
        
        public event System.EventHandler<GetDivisionByDivCodeCompletedEventArgs> GetDivisionByDivCodeCompleted;
        
        public event System.EventHandler<GetDivsionByDivNoCompletedEventArgs> GetDivsionByDivNoCompleted;
        
        public event System.EventHandler<GetDivsionAllCompletedEventArgs> GetDivsionAllCompleted;
        
        public event System.EventHandler<GetDrInfoListByDivNoCompletedEventArgs> GetDrInfoListByDivNoCompleted;
        
        public event System.EventHandler<GetRoomByRoomNoCompletedEventArgs> GetRoomByRoomNoCompleted;
        
        public event System.EventHandler<GetRoomByRoomCodeCompletedEventArgs> GetRoomByRoomCodeCompleted;
        
        public event System.EventHandler<GetRoomAllCompletedEventArgs> GetRoomAllCompleted;
        
        public event System.EventHandler<GetRoomByDivNoCompletedEventArgs> GetRoomByDivNoCompleted;
        
        public event System.EventHandler<GetDrVisitScheduleMtListByDrNoCompletedEventArgs> GetDrVisitScheduleMtListByDrNoCompleted;
        
        public event System.EventHandler<GetRegNumAllCompletedEventArgs> GetRegNumAllCompleted;
        
        public event System.EventHandler<GetEmpByDrCodeCompletedEventArgs> GetEmpByDrCodeCompleted;
        
        public event System.EventHandler<GetEmpByDrNoCompletedEventArgs> GetEmpByDrNoCompleted;
        
        public event System.EventHandler<GetDrVisitScheduleMtByScheduleIdCompletedEventArgs> GetDrVisitScheduleMtByScheduleIdCompleted;
        
        public event System.EventHandler<GetDrScheduleDtByScheduleIdCompletedEventArgs> GetDrScheduleDtByScheduleIdCompleted;
        
        public event System.EventHandler<GetDiviSionDrByEmpCodeCompletedEventArgs> GetDiviSionDrByEmpCodeCompleted;
        
        public event System.EventHandler<GetDivScheduleByDateCompletedEventArgs> GetDivScheduleByDateCompleted;
        
        public event System.EventHandler<GetMasterScheduleByDateCompletedEventArgs> GetMasterScheduleByDateCompleted;
        
        public event System.EventHandler<IsRoomUsingCompletedEventArgs> IsRoomUsingCompleted;
        
        public event System.EventHandler<GetVisitScheduleMtCompletedEventArgs> GetVisitScheduleMtCompleted;
        
        public event System.EventHandler<GetDrDtListByDrSchDtNoCompletedEventArgs> GetDrDtListByDrSchDtNoCompleted;
        
        public event System.EventHandler<GetVisitRescordListCompletedEventArgs> GetVisitRescordListCompleted;
        
        public event System.EventHandler<GetDrScheduleDtByDateCompletedEventArgs> GetDrScheduleDtByDateCompleted;
        
        public event System.EventHandler<InsertVisitRestRecordCompletedEventArgs> InsertVisitRestRecordCompleted;
        
        public event System.EventHandler<InsertVisitScheduleMtCompletedEventArgs> InsertVisitScheduleMtCompleted;
        
        public event System.EventHandler<UpdteVisitScheduleMtCompletedEventArgs> UpdteVisitScheduleMtCompleted;
        
        public event System.EventHandler<UpdateVisitDrSchDtCompletedEventArgs> UpdateVisitDrSchDtCompleted;
        
        public event System.EventHandler<UpdateVisitRecordCompletedEventArgs> UpdateVisitRecordCompleted;
        
        public event System.EventHandler<DelVisitRestRecordCompletedEventArgs> DelVisitRestRecordCompleted;
        
        public event System.EventHandler<UpdateDrSchDtFromVisitRestCompletedEventArgs> UpdateDrSchDtFromVisitRestCompleted;
        
        public event System.EventHandler<GetDrVisitSchMtListByRoomNoCompletedEventArgs> GetDrVisitSchMtListByRoomNoCompleted;
        
        public event System.EventHandler<GetVisitLevelSetByLevelCodeCompletedEventArgs> GetVisitLevelSetByLevelCodeCompleted;
        
        public event System.EventHandler<QueryDrScheduleDtByDateCompletedEventArgs> QueryDrScheduleDtByDateCompleted;
        
        public event System.EventHandler<QueryVisitRecordbyDrCodeCompletedEventArgs> QueryVisitRecordbyDrCodeCompleted;
        
        public event System.EventHandler<QueryProductbyItemCodeCompletedEventArgs> QueryProductbyItemCodeCompleted;
        
        public event System.EventHandler<QueryVisitCompletedEventArgs> QueryVisitCompleted;
        
        public event System.EventHandler<SetDrSchMtCompletedEventArgs> SetDrSchMtCompleted;
        
        public HisProxy.DrSchedule.DivRegScheduleDto[] GetDivRegScheduleByVisitType(object VisitType, object DivNo) {
            return base.Channel.GetDivRegScheduleByVisitType(VisitType, DivNo);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDivRegScheduleByVisitType(object VisitType, object DivNo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDivRegScheduleByVisitType(VisitType, DivNo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public HisProxy.DrSchedule.DivRegScheduleDto[] EndGetDivRegScheduleByVisitType(System.IAsyncResult result) {
            return base.Channel.EndGetDivRegScheduleByVisitType(result);
        }
        
        private System.IAsyncResult OnBeginGetDivRegScheduleByVisitType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            object VisitType = ((object)(inValues[0]));
            object DivNo = ((object)(inValues[1]));
            return this.BeginGetDivRegScheduleByVisitType(VisitType, DivNo, callback, asyncState);
        }
        
        private object[] OnEndGetDivRegScheduleByVisitType(System.IAsyncResult result) {
            HisProxy.DrSchedule.DivRegScheduleDto[] retVal = this.EndGetDivRegScheduleByVisitType(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDivRegScheduleByVisitTypeCompleted(object state) {
            if ((this.GetDivRegScheduleByVisitTypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDivRegScheduleByVisitTypeCompleted(this, new GetDivRegScheduleByVisitTypeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDivRegScheduleByVisitTypeAsync(object VisitType, object DivNo) {
            this.GetDivRegScheduleByVisitTypeAsync(VisitType, DivNo, null);
        }
        
        public void GetDivRegScheduleByVisitTypeAsync(object VisitType, object DivNo, object userState) {
            if ((this.onBeginGetDivRegScheduleByVisitTypeDelegate == null)) {
                this.onBeginGetDivRegScheduleByVisitTypeDelegate = new BeginOperationDelegate(this.OnBeginGetDivRegScheduleByVisitType);
            }
            if ((this.onEndGetDivRegScheduleByVisitTypeDelegate == null)) {
                this.onEndGetDivRegScheduleByVisitTypeDelegate = new EndOperationDelegate(this.OnEndGetDivRegScheduleByVisitType);
            }
            if ((this.onGetDivRegScheduleByVisitTypeCompletedDelegate == null)) {
                this.onGetDivRegScheduleByVisitTypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDivRegScheduleByVisitTypeCompleted);
            }
            base.InvokeAsync(this.onBeginGetDivRegScheduleByVisitTypeDelegate, new object[] {
                        VisitType,
                        DivNo}, this.onEndGetDivRegScheduleByVisitTypeDelegate, this.onGetDivRegScheduleByVisitTypeCompletedDelegate, userState);
        }
        
        public bool AddDivRegSchedule(HisProxy.DrSchedule.DivRegScheduleDto entity, System.DateTime FirstDay, int circle) {
            return base.Channel.AddDivRegSchedule(entity, FirstDay, circle);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddDivRegSchedule(HisProxy.DrSchedule.DivRegScheduleDto entity, System.DateTime FirstDay, int circle, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddDivRegSchedule(entity, FirstDay, circle, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndAddDivRegSchedule(System.IAsyncResult result) {
            return base.Channel.EndAddDivRegSchedule(result);
        }
        
        private System.IAsyncResult OnBeginAddDivRegSchedule(object[] inValues, System.AsyncCallback callback, object asyncState) {
            HisProxy.DrSchedule.DivRegScheduleDto entity = ((HisProxy.DrSchedule.DivRegScheduleDto)(inValues[0]));
            System.DateTime FirstDay = ((System.DateTime)(inValues[1]));
            int circle = ((int)(inValues[2]));
            return this.BeginAddDivRegSchedule(entity, FirstDay, circle, callback, asyncState);
        }
        
        private object[] OnEndAddDivRegSchedule(System.IAsyncResult result) {
            bool retVal = this.EndAddDivRegSchedule(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddDivRegScheduleCompleted(object state) {
            if ((this.AddDivRegScheduleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddDivRegScheduleCompleted(this, new AddDivRegScheduleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddDivRegScheduleAsync(HisProxy.DrSchedule.DivRegScheduleDto entity, System.DateTime FirstDay, int circle) {
            this.AddDivRegScheduleAsync(entity, FirstDay, circle, null);
        }
        
        public void AddDivRegScheduleAsync(HisProxy.DrSchedule.DivRegScheduleDto entity, System.DateTime FirstDay, int circle, object userState) {
            if ((this.onBeginAddDivRegScheduleDelegate == null)) {
                this.onBeginAddDivRegScheduleDelegate = new BeginOperationDelegate(this.OnBeginAddDivRegSchedule);
            }
            if ((this.onEndAddDivRegScheduleDelegate == null)) {
                this.onEndAddDivRegScheduleDelegate = new EndOperationDelegate(this.OnEndAddDivRegSchedule);
            }
            if ((this.onAddDivRegScheduleCompletedDelegate == null)) {
                this.onAddDivRegScheduleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddDivRegScheduleCompleted);
            }
            base.InvokeAsync(this.onBeginAddDivRegScheduleDelegate, new object[] {
                        entity,
                        FirstDay,
                        circle}, this.onEndAddDivRegScheduleDelegate, this.onAddDivRegScheduleCompletedDelegate, userState);
        }
        
        public bool UpdateDivRegSchedule(HisProxy.DrSchedule.DivRegScheduleDto entity) {
            return base.Channel.UpdateDivRegSchedule(entity);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateDivRegSchedule(HisProxy.DrSchedule.DivRegScheduleDto entity, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateDivRegSchedule(entity, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndUpdateDivRegSchedule(System.IAsyncResult result) {
            return base.Channel.EndUpdateDivRegSchedule(result);
        }
        
        private System.IAsyncResult OnBeginUpdateDivRegSchedule(object[] inValues, System.AsyncCallback callback, object asyncState) {
            HisProxy.DrSchedule.DivRegScheduleDto entity = ((HisProxy.DrSchedule.DivRegScheduleDto)(inValues[0]));
            return this.BeginUpdateDivRegSchedule(entity, callback, asyncState);
        }
        
        private object[] OnEndUpdateDivRegSchedule(System.IAsyncResult result) {
            bool retVal = this.EndUpdateDivRegSchedule(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateDivRegScheduleCompleted(object state) {
            if ((this.UpdateDivRegScheduleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateDivRegScheduleCompleted(this, new UpdateDivRegScheduleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateDivRegScheduleAsync(HisProxy.DrSchedule.DivRegScheduleDto entity) {
            this.UpdateDivRegScheduleAsync(entity, null);
        }
        
        public void UpdateDivRegScheduleAsync(HisProxy.DrSchedule.DivRegScheduleDto entity, object userState) {
            if ((this.onBeginUpdateDivRegScheduleDelegate == null)) {
                this.onBeginUpdateDivRegScheduleDelegate = new BeginOperationDelegate(this.OnBeginUpdateDivRegSchedule);
            }
            if ((this.onEndUpdateDivRegScheduleDelegate == null)) {
                this.onEndUpdateDivRegScheduleDelegate = new EndOperationDelegate(this.OnEndUpdateDivRegSchedule);
            }
            if ((this.onUpdateDivRegScheduleCompletedDelegate == null)) {
                this.onUpdateDivRegScheduleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateDivRegScheduleCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateDivRegScheduleDelegate, new object[] {
                        entity}, this.onEndUpdateDivRegScheduleDelegate, this.onUpdateDivRegScheduleCompletedDelegate, userState);
        }
        
        public HisProxy.DrSchedule.DivisionDto[] GetDivisionByDivCode(string DivCode) {
            return base.Channel.GetDivisionByDivCode(DivCode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDivisionByDivCode(string DivCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDivisionByDivCode(DivCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public HisProxy.DrSchedule.DivisionDto[] EndGetDivisionByDivCode(System.IAsyncResult result) {
            return base.Channel.EndGetDivisionByDivCode(result);
        }
        
        private System.IAsyncResult OnBeginGetDivisionByDivCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string DivCode = ((string)(inValues[0]));
            return this.BeginGetDivisionByDivCode(DivCode, callback, asyncState);
        }
        
        private object[] OnEndGetDivisionByDivCode(System.IAsyncResult result) {
            HisProxy.DrSchedule.DivisionDto[] retVal = this.EndGetDivisionByDivCode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDivisionByDivCodeCompleted(object state) {
            if ((this.GetDivisionByDivCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDivisionByDivCodeCompleted(this, new GetDivisionByDivCodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDivisionByDivCodeAsync(string DivCode) {
            this.GetDivisionByDivCodeAsync(DivCode, null);
        }
        
        public void GetDivisionByDivCodeAsync(string DivCode, object userState) {
            if ((this.onBeginGetDivisionByDivCodeDelegate == null)) {
                this.onBeginGetDivisionByDivCodeDelegate = new BeginOperationDelegate(this.OnBeginGetDivisionByDivCode);
            }
            if ((this.onEndGetDivisionByDivCodeDelegate == null)) {
                this.onEndGetDivisionByDivCodeDelegate = new EndOperationDelegate(this.OnEndGetDivisionByDivCode);
            }
            if ((this.onGetDivisionByDivCodeCompletedDelegate == null)) {
                this.onGetDivisionByDivCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDivisionByDivCodeCompleted);
            }
            base.InvokeAsync(this.onBeginGetDivisionByDivCodeDelegate, new object[] {
                        DivCode}, this.onEndGetDivisionByDivCodeDelegate, this.onGetDivisionByDivCodeCompletedDelegate, userState);
        }
        
        public HisProxy.DrSchedule.DivisionDto[] GetDivsionByDivNo(string DivCode) {
            return base.Channel.GetDivsionByDivNo(DivCode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDivsionByDivNo(string DivCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDivsionByDivNo(DivCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public HisProxy.DrSchedule.DivisionDto[] EndGetDivsionByDivNo(System.IAsyncResult result) {
            return base.Channel.EndGetDivsionByDivNo(result);
        }
        
        private System.IAsyncResult OnBeginGetDivsionByDivNo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string DivCode = ((string)(inValues[0]));
            return this.BeginGetDivsionByDivNo(DivCode, callback, asyncState);
        }
        
        private object[] OnEndGetDivsionByDivNo(System.IAsyncResult result) {
            HisProxy.DrSchedule.DivisionDto[] retVal = this.EndGetDivsionByDivNo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDivsionByDivNoCompleted(object state) {
            if ((this.GetDivsionByDivNoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDivsionByDivNoCompleted(this, new GetDivsionByDivNoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDivsionByDivNoAsync(string DivCode) {
            this.GetDivsionByDivNoAsync(DivCode, null);
        }
        
        public void GetDivsionByDivNoAsync(string DivCode, object userState) {
            if ((this.onBeginGetDivsionByDivNoDelegate == null)) {
                this.onBeginGetDivsionByDivNoDelegate = new BeginOperationDelegate(this.OnBeginGetDivsionByDivNo);
            }
            if ((this.onEndGetDivsionByDivNoDelegate == null)) {
                this.onEndGetDivsionByDivNoDelegate = new EndOperationDelegate(this.OnEndGetDivsionByDivNo);
            }
            if ((this.onGetDivsionByDivNoCompletedDelegate == null)) {
                this.onGetDivsionByDivNoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDivsionByDivNoCompleted);
            }
            base.InvokeAsync(this.onBeginGetDivsionByDivNoDelegate, new object[] {
                        DivCode}, this.onEndGetDivsionByDivNoDelegate, this.onGetDivsionByDivNoCompletedDelegate, userState);
        }
        
        public HisProxy.DrSchedule.DivisionOutOut[] GetDivsionAll() {
            return base.Channel.GetDivsionAll();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDivsionAll(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDivsionAll(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public HisProxy.DrSchedule.DivisionOutOut[] EndGetDivsionAll(System.IAsyncResult result) {
            return base.Channel.EndGetDivsionAll(result);
        }
        
        private System.IAsyncResult OnBeginGetDivsionAll(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetDivsionAll(callback, asyncState);
        }
        
        private object[] OnEndGetDivsionAll(System.IAsyncResult result) {
            HisProxy.DrSchedule.DivisionOutOut[] retVal = this.EndGetDivsionAll(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDivsionAllCompleted(object state) {
            if ((this.GetDivsionAllCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDivsionAllCompleted(this, new GetDivsionAllCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDivsionAllAsync() {
            this.GetDivsionAllAsync(null);
        }
        
        public void GetDivsionAllAsync(object userState) {
            if ((this.onBeginGetDivsionAllDelegate == null)) {
                this.onBeginGetDivsionAllDelegate = new BeginOperationDelegate(this.OnBeginGetDivsionAll);
            }
            if ((this.onEndGetDivsionAllDelegate == null)) {
                this.onEndGetDivsionAllDelegate = new EndOperationDelegate(this.OnEndGetDivsionAll);
            }
            if ((this.onGetDivsionAllCompletedDelegate == null)) {
                this.onGetDivsionAllCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDivsionAllCompleted);
            }
            base.InvokeAsync(this.onBeginGetDivsionAllDelegate, null, this.onEndGetDivsionAllDelegate, this.onGetDivsionAllCompletedDelegate, userState);
        }
        
        public HisProxy.DrSchedule.DoctorOutput[] GetDrInfoListByDivNo(string DivNo) {
            return base.Channel.GetDrInfoListByDivNo(DivNo);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDrInfoListByDivNo(string DivNo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDrInfoListByDivNo(DivNo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public HisProxy.DrSchedule.DoctorOutput[] EndGetDrInfoListByDivNo(System.IAsyncResult result) {
            return base.Channel.EndGetDrInfoListByDivNo(result);
        }
        
        private System.IAsyncResult OnBeginGetDrInfoListByDivNo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string DivNo = ((string)(inValues[0]));
            return this.BeginGetDrInfoListByDivNo(DivNo, callback, asyncState);
        }
        
        private object[] OnEndGetDrInfoListByDivNo(System.IAsyncResult result) {
            HisProxy.DrSchedule.DoctorOutput[] retVal = this.EndGetDrInfoListByDivNo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDrInfoListByDivNoCompleted(object state) {
            if ((this.GetDrInfoListByDivNoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDrInfoListByDivNoCompleted(this, new GetDrInfoListByDivNoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDrInfoListByDivNoAsync(string DivNo) {
            this.GetDrInfoListByDivNoAsync(DivNo, null);
        }
        
        public void GetDrInfoListByDivNoAsync(string DivNo, object userState) {
            if ((this.onBeginGetDrInfoListByDivNoDelegate == null)) {
                this.onBeginGetDrInfoListByDivNoDelegate = new BeginOperationDelegate(this.OnBeginGetDrInfoListByDivNo);
            }
            if ((this.onEndGetDrInfoListByDivNoDelegate == null)) {
                this.onEndGetDrInfoListByDivNoDelegate = new EndOperationDelegate(this.OnEndGetDrInfoListByDivNo);
            }
            if ((this.onGetDrInfoListByDivNoCompletedDelegate == null)) {
                this.onGetDrInfoListByDivNoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDrInfoListByDivNoCompleted);
            }
            base.InvokeAsync(this.onBeginGetDrInfoListByDivNoDelegate, new object[] {
                        DivNo}, this.onEndGetDrInfoListByDivNoDelegate, this.onGetDrInfoListByDivNoCompletedDelegate, userState);
        }
        
        public HisProxy.DrSchedule.RoomOutput[] GetRoomByRoomNo(string RoomNo, string Zone) {
            return base.Channel.GetRoomByRoomNo(RoomNo, Zone);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRoomByRoomNo(string RoomNo, string Zone, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRoomByRoomNo(RoomNo, Zone, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public HisProxy.DrSchedule.RoomOutput[] EndGetRoomByRoomNo(System.IAsyncResult result) {
            return base.Channel.EndGetRoomByRoomNo(result);
        }
        
        private System.IAsyncResult OnBeginGetRoomByRoomNo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string RoomNo = ((string)(inValues[0]));
            string Zone = ((string)(inValues[1]));
            return this.BeginGetRoomByRoomNo(RoomNo, Zone, callback, asyncState);
        }
        
        private object[] OnEndGetRoomByRoomNo(System.IAsyncResult result) {
            HisProxy.DrSchedule.RoomOutput[] retVal = this.EndGetRoomByRoomNo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRoomByRoomNoCompleted(object state) {
            if ((this.GetRoomByRoomNoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRoomByRoomNoCompleted(this, new GetRoomByRoomNoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRoomByRoomNoAsync(string RoomNo, string Zone) {
            this.GetRoomByRoomNoAsync(RoomNo, Zone, null);
        }
        
        public void GetRoomByRoomNoAsync(string RoomNo, string Zone, object userState) {
            if ((this.onBeginGetRoomByRoomNoDelegate == null)) {
                this.onBeginGetRoomByRoomNoDelegate = new BeginOperationDelegate(this.OnBeginGetRoomByRoomNo);
            }
            if ((this.onEndGetRoomByRoomNoDelegate == null)) {
                this.onEndGetRoomByRoomNoDelegate = new EndOperationDelegate(this.OnEndGetRoomByRoomNo);
            }
            if ((this.onGetRoomByRoomNoCompletedDelegate == null)) {
                this.onGetRoomByRoomNoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRoomByRoomNoCompleted);
            }
            base.InvokeAsync(this.onBeginGetRoomByRoomNoDelegate, new object[] {
                        RoomNo,
                        Zone}, this.onEndGetRoomByRoomNoDelegate, this.onGetRoomByRoomNoCompletedDelegate, userState);
        }
        
        public HisProxy.DrSchedule.RoomOutput[] GetRoomByRoomCode(string RoomCode, string Area) {
            return base.Channel.GetRoomByRoomCode(RoomCode, Area);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRoomByRoomCode(string RoomCode, string Area, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRoomByRoomCode(RoomCode, Area, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public HisProxy.DrSchedule.RoomOutput[] EndGetRoomByRoomCode(System.IAsyncResult result) {
            return base.Channel.EndGetRoomByRoomCode(result);
        }
        
        private System.IAsyncResult OnBeginGetRoomByRoomCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string RoomCode = ((string)(inValues[0]));
            string Area = ((string)(inValues[1]));
            return this.BeginGetRoomByRoomCode(RoomCode, Area, callback, asyncState);
        }
        
        private object[] OnEndGetRoomByRoomCode(System.IAsyncResult result) {
            HisProxy.DrSchedule.RoomOutput[] retVal = this.EndGetRoomByRoomCode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRoomByRoomCodeCompleted(object state) {
            if ((this.GetRoomByRoomCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRoomByRoomCodeCompleted(this, new GetRoomByRoomCodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRoomByRoomCodeAsync(string RoomCode, string Area) {
            this.GetRoomByRoomCodeAsync(RoomCode, Area, null);
        }
        
        public void GetRoomByRoomCodeAsync(string RoomCode, string Area, object userState) {
            if ((this.onBeginGetRoomByRoomCodeDelegate == null)) {
                this.onBeginGetRoomByRoomCodeDelegate = new BeginOperationDelegate(this.OnBeginGetRoomByRoomCode);
            }
            if ((this.onEndGetRoomByRoomCodeDelegate == null)) {
                this.onEndGetRoomByRoomCodeDelegate = new EndOperationDelegate(this.OnEndGetRoomByRoomCode);
            }
            if ((this.onGetRoomByRoomCodeCompletedDelegate == null)) {
                this.onGetRoomByRoomCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRoomByRoomCodeCompleted);
            }
            base.InvokeAsync(this.onBeginGetRoomByRoomCodeDelegate, new object[] {
                        RoomCode,
                        Area}, this.onEndGetRoomByRoomCodeDelegate, this.onGetRoomByRoomCodeCompletedDelegate, userState);
        }
        
        public HisProxy.DrSchedule.RoomOutput[] GetRoomAll() {
            return base.Channel.GetRoomAll();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRoomAll(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRoomAll(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public HisProxy.DrSchedule.RoomOutput[] EndGetRoomAll(System.IAsyncResult result) {
            return base.Channel.EndGetRoomAll(result);
        }
        
        private System.IAsyncResult OnBeginGetRoomAll(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetRoomAll(callback, asyncState);
        }
        
        private object[] OnEndGetRoomAll(System.IAsyncResult result) {
            HisProxy.DrSchedule.RoomOutput[] retVal = this.EndGetRoomAll(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRoomAllCompleted(object state) {
            if ((this.GetRoomAllCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRoomAllCompleted(this, new GetRoomAllCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRoomAllAsync() {
            this.GetRoomAllAsync(null);
        }
        
        public void GetRoomAllAsync(object userState) {
            if ((this.onBeginGetRoomAllDelegate == null)) {
                this.onBeginGetRoomAllDelegate = new BeginOperationDelegate(this.OnBeginGetRoomAll);
            }
            if ((this.onEndGetRoomAllDelegate == null)) {
                this.onEndGetRoomAllDelegate = new EndOperationDelegate(this.OnEndGetRoomAll);
            }
            if ((this.onGetRoomAllCompletedDelegate == null)) {
                this.onGetRoomAllCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRoomAllCompleted);
            }
            base.InvokeAsync(this.onBeginGetRoomAllDelegate, null, this.onEndGetRoomAllDelegate, this.onGetRoomAllCompletedDelegate, userState);
        }
        
        public HisProxy.DrSchedule.RoomOutput[] GetRoomByDivNo(string DivNo) {
            return base.Channel.GetRoomByDivNo(DivNo);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRoomByDivNo(string DivNo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRoomByDivNo(DivNo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public HisProxy.DrSchedule.RoomOutput[] EndGetRoomByDivNo(System.IAsyncResult result) {
            return base.Channel.EndGetRoomByDivNo(result);
        }
        
        private System.IAsyncResult OnBeginGetRoomByDivNo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string DivNo = ((string)(inValues[0]));
            return this.BeginGetRoomByDivNo(DivNo, callback, asyncState);
        }
        
        private object[] OnEndGetRoomByDivNo(System.IAsyncResult result) {
            HisProxy.DrSchedule.RoomOutput[] retVal = this.EndGetRoomByDivNo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRoomByDivNoCompleted(object state) {
            if ((this.GetRoomByDivNoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRoomByDivNoCompleted(this, new GetRoomByDivNoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRoomByDivNoAsync(string DivNo) {
            this.GetRoomByDivNoAsync(DivNo, null);
        }
        
        public void GetRoomByDivNoAsync(string DivNo, object userState) {
            if ((this.onBeginGetRoomByDivNoDelegate == null)) {
                this.onBeginGetRoomByDivNoDelegate = new BeginOperationDelegate(this.OnBeginGetRoomByDivNo);
            }
            if ((this.onEndGetRoomByDivNoDelegate == null)) {
                this.onEndGetRoomByDivNoDelegate = new EndOperationDelegate(this.OnEndGetRoomByDivNo);
            }
            if ((this.onGetRoomByDivNoCompletedDelegate == null)) {
                this.onGetRoomByDivNoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRoomByDivNoCompleted);
            }
            base.InvokeAsync(this.onBeginGetRoomByDivNoDelegate, new object[] {
                        DivNo}, this.onEndGetRoomByDivNoDelegate, this.onGetRoomByDivNoCompletedDelegate, userState);
        }
        
        public HisProxy.DrSchedule.VisitScheduleOutPut[] GetDrVisitScheduleMtListByDrNo(string zone, string DrNo) {
            return base.Channel.GetDrVisitScheduleMtListByDrNo(zone, DrNo);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDrVisitScheduleMtListByDrNo(string zone, string DrNo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDrVisitScheduleMtListByDrNo(zone, DrNo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public HisProxy.DrSchedule.VisitScheduleOutPut[] EndGetDrVisitScheduleMtListByDrNo(System.IAsyncResult result) {
            return base.Channel.EndGetDrVisitScheduleMtListByDrNo(result);
        }
        
        private System.IAsyncResult OnBeginGetDrVisitScheduleMtListByDrNo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string zone = ((string)(inValues[0]));
            string DrNo = ((string)(inValues[1]));
            return this.BeginGetDrVisitScheduleMtListByDrNo(zone, DrNo, callback, asyncState);
        }
        
        private object[] OnEndGetDrVisitScheduleMtListByDrNo(System.IAsyncResult result) {
            HisProxy.DrSchedule.VisitScheduleOutPut[] retVal = this.EndGetDrVisitScheduleMtListByDrNo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDrVisitScheduleMtListByDrNoCompleted(object state) {
            if ((this.GetDrVisitScheduleMtListByDrNoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDrVisitScheduleMtListByDrNoCompleted(this, new GetDrVisitScheduleMtListByDrNoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDrVisitScheduleMtListByDrNoAsync(string zone, string DrNo) {
            this.GetDrVisitScheduleMtListByDrNoAsync(zone, DrNo, null);
        }
        
        public void GetDrVisitScheduleMtListByDrNoAsync(string zone, string DrNo, object userState) {
            if ((this.onBeginGetDrVisitScheduleMtListByDrNoDelegate == null)) {
                this.onBeginGetDrVisitScheduleMtListByDrNoDelegate = new BeginOperationDelegate(this.OnBeginGetDrVisitScheduleMtListByDrNo);
            }
            if ((this.onEndGetDrVisitScheduleMtListByDrNoDelegate == null)) {
                this.onEndGetDrVisitScheduleMtListByDrNoDelegate = new EndOperationDelegate(this.OnEndGetDrVisitScheduleMtListByDrNo);
            }
            if ((this.onGetDrVisitScheduleMtListByDrNoCompletedDelegate == null)) {
                this.onGetDrVisitScheduleMtListByDrNoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDrVisitScheduleMtListByDrNoCompleted);
            }
            base.InvokeAsync(this.onBeginGetDrVisitScheduleMtListByDrNoDelegate, new object[] {
                        zone,
                        DrNo}, this.onEndGetDrVisitScheduleMtListByDrNoDelegate, this.onGetDrVisitScheduleMtListByDrNoCompletedDelegate, userState);
        }
        
        public HisProxy.DrSchedule.RegisterNumber[] GetRegNumAll() {
            return base.Channel.GetRegNumAll();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRegNumAll(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRegNumAll(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public HisProxy.DrSchedule.RegisterNumber[] EndGetRegNumAll(System.IAsyncResult result) {
            return base.Channel.EndGetRegNumAll(result);
        }
        
        private System.IAsyncResult OnBeginGetRegNumAll(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetRegNumAll(callback, asyncState);
        }
        
        private object[] OnEndGetRegNumAll(System.IAsyncResult result) {
            HisProxy.DrSchedule.RegisterNumber[] retVal = this.EndGetRegNumAll(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRegNumAllCompleted(object state) {
            if ((this.GetRegNumAllCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRegNumAllCompleted(this, new GetRegNumAllCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRegNumAllAsync() {
            this.GetRegNumAllAsync(null);
        }
        
        public void GetRegNumAllAsync(object userState) {
            if ((this.onBeginGetRegNumAllDelegate == null)) {
                this.onBeginGetRegNumAllDelegate = new BeginOperationDelegate(this.OnBeginGetRegNumAll);
            }
            if ((this.onEndGetRegNumAllDelegate == null)) {
                this.onEndGetRegNumAllDelegate = new EndOperationDelegate(this.OnEndGetRegNumAll);
            }
            if ((this.onGetRegNumAllCompletedDelegate == null)) {
                this.onGetRegNumAllCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRegNumAllCompleted);
            }
            base.InvokeAsync(this.onBeginGetRegNumAllDelegate, null, this.onEndGetRegNumAllDelegate, this.onGetRegNumAllCompletedDelegate, userState);
        }
        
        public HisProxy.DrSchedule.EmployeeOutput[] GetEmpByDrCode(string DrCode) {
            return base.Channel.GetEmpByDrCode(DrCode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetEmpByDrCode(string DrCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetEmpByDrCode(DrCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public HisProxy.DrSchedule.EmployeeOutput[] EndGetEmpByDrCode(System.IAsyncResult result) {
            return base.Channel.EndGetEmpByDrCode(result);
        }
        
        private System.IAsyncResult OnBeginGetEmpByDrCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string DrCode = ((string)(inValues[0]));
            return this.BeginGetEmpByDrCode(DrCode, callback, asyncState);
        }
        
        private object[] OnEndGetEmpByDrCode(System.IAsyncResult result) {
            HisProxy.DrSchedule.EmployeeOutput[] retVal = this.EndGetEmpByDrCode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetEmpByDrCodeCompleted(object state) {
            if ((this.GetEmpByDrCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetEmpByDrCodeCompleted(this, new GetEmpByDrCodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetEmpByDrCodeAsync(string DrCode) {
            this.GetEmpByDrCodeAsync(DrCode, null);
        }
        
        public void GetEmpByDrCodeAsync(string DrCode, object userState) {
            if ((this.onBeginGetEmpByDrCodeDelegate == null)) {
                this.onBeginGetEmpByDrCodeDelegate = new BeginOperationDelegate(this.OnBeginGetEmpByDrCode);
            }
            if ((this.onEndGetEmpByDrCodeDelegate == null)) {
                this.onEndGetEmpByDrCodeDelegate = new EndOperationDelegate(this.OnEndGetEmpByDrCode);
            }
            if ((this.onGetEmpByDrCodeCompletedDelegate == null)) {
                this.onGetEmpByDrCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEmpByDrCodeCompleted);
            }
            base.InvokeAsync(this.onBeginGetEmpByDrCodeDelegate, new object[] {
                        DrCode}, this.onEndGetEmpByDrCodeDelegate, this.onGetEmpByDrCodeCompletedDelegate, userState);
        }
        
        public HisProxy.DrSchedule.EmployeeOutput[] GetEmpByDrNo(string DrNo) {
            return base.Channel.GetEmpByDrNo(DrNo);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetEmpByDrNo(string DrNo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetEmpByDrNo(DrNo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public HisProxy.DrSchedule.EmployeeOutput[] EndGetEmpByDrNo(System.IAsyncResult result) {
            return base.Channel.EndGetEmpByDrNo(result);
        }
        
        private System.IAsyncResult OnBeginGetEmpByDrNo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string DrNo = ((string)(inValues[0]));
            return this.BeginGetEmpByDrNo(DrNo, callback, asyncState);
        }
        
        private object[] OnEndGetEmpByDrNo(System.IAsyncResult result) {
            HisProxy.DrSchedule.EmployeeOutput[] retVal = this.EndGetEmpByDrNo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetEmpByDrNoCompleted(object state) {
            if ((this.GetEmpByDrNoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetEmpByDrNoCompleted(this, new GetEmpByDrNoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetEmpByDrNoAsync(string DrNo) {
            this.GetEmpByDrNoAsync(DrNo, null);
        }
        
        public void GetEmpByDrNoAsync(string DrNo, object userState) {
            if ((this.onBeginGetEmpByDrNoDelegate == null)) {
                this.onBeginGetEmpByDrNoDelegate = new BeginOperationDelegate(this.OnBeginGetEmpByDrNo);
            }
            if ((this.onEndGetEmpByDrNoDelegate == null)) {
                this.onEndGetEmpByDrNoDelegate = new EndOperationDelegate(this.OnEndGetEmpByDrNo);
            }
            if ((this.onGetEmpByDrNoCompletedDelegate == null)) {
                this.onGetEmpByDrNoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEmpByDrNoCompleted);
            }
            base.InvokeAsync(this.onBeginGetEmpByDrNoDelegate, new object[] {
                        DrNo}, this.onEndGetEmpByDrNoDelegate, this.onGetEmpByDrNoCompletedDelegate, userState);
        }
        
        public HisProxy.DrSchedule.VisitScheduleOutPut[] GetDrVisitScheduleMtByScheduleId(string ScheduleNo) {
            return base.Channel.GetDrVisitScheduleMtByScheduleId(ScheduleNo);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDrVisitScheduleMtByScheduleId(string ScheduleNo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDrVisitScheduleMtByScheduleId(ScheduleNo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public HisProxy.DrSchedule.VisitScheduleOutPut[] EndGetDrVisitScheduleMtByScheduleId(System.IAsyncResult result) {
            return base.Channel.EndGetDrVisitScheduleMtByScheduleId(result);
        }
        
        private System.IAsyncResult OnBeginGetDrVisitScheduleMtByScheduleId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ScheduleNo = ((string)(inValues[0]));
            return this.BeginGetDrVisitScheduleMtByScheduleId(ScheduleNo, callback, asyncState);
        }
        
        private object[] OnEndGetDrVisitScheduleMtByScheduleId(System.IAsyncResult result) {
            HisProxy.DrSchedule.VisitScheduleOutPut[] retVal = this.EndGetDrVisitScheduleMtByScheduleId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDrVisitScheduleMtByScheduleIdCompleted(object state) {
            if ((this.GetDrVisitScheduleMtByScheduleIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDrVisitScheduleMtByScheduleIdCompleted(this, new GetDrVisitScheduleMtByScheduleIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDrVisitScheduleMtByScheduleIdAsync(string ScheduleNo) {
            this.GetDrVisitScheduleMtByScheduleIdAsync(ScheduleNo, null);
        }
        
        public void GetDrVisitScheduleMtByScheduleIdAsync(string ScheduleNo, object userState) {
            if ((this.onBeginGetDrVisitScheduleMtByScheduleIdDelegate == null)) {
                this.onBeginGetDrVisitScheduleMtByScheduleIdDelegate = new BeginOperationDelegate(this.OnBeginGetDrVisitScheduleMtByScheduleId);
            }
            if ((this.onEndGetDrVisitScheduleMtByScheduleIdDelegate == null)) {
                this.onEndGetDrVisitScheduleMtByScheduleIdDelegate = new EndOperationDelegate(this.OnEndGetDrVisitScheduleMtByScheduleId);
            }
            if ((this.onGetDrVisitScheduleMtByScheduleIdCompletedDelegate == null)) {
                this.onGetDrVisitScheduleMtByScheduleIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDrVisitScheduleMtByScheduleIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetDrVisitScheduleMtByScheduleIdDelegate, new object[] {
                        ScheduleNo}, this.onEndGetDrVisitScheduleMtByScheduleIdDelegate, this.onGetDrVisitScheduleMtByScheduleIdCompletedDelegate, userState);
        }
        
        public HisProxy.DrSchedule.VisitScheduleDt[] GetDrScheduleDtByScheduleId(string ScheduleNo) {
            return base.Channel.GetDrScheduleDtByScheduleId(ScheduleNo);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDrScheduleDtByScheduleId(string ScheduleNo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDrScheduleDtByScheduleId(ScheduleNo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public HisProxy.DrSchedule.VisitScheduleDt[] EndGetDrScheduleDtByScheduleId(System.IAsyncResult result) {
            return base.Channel.EndGetDrScheduleDtByScheduleId(result);
        }
        
        private System.IAsyncResult OnBeginGetDrScheduleDtByScheduleId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ScheduleNo = ((string)(inValues[0]));
            return this.BeginGetDrScheduleDtByScheduleId(ScheduleNo, callback, asyncState);
        }
        
        private object[] OnEndGetDrScheduleDtByScheduleId(System.IAsyncResult result) {
            HisProxy.DrSchedule.VisitScheduleDt[] retVal = this.EndGetDrScheduleDtByScheduleId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDrScheduleDtByScheduleIdCompleted(object state) {
            if ((this.GetDrScheduleDtByScheduleIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDrScheduleDtByScheduleIdCompleted(this, new GetDrScheduleDtByScheduleIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDrScheduleDtByScheduleIdAsync(string ScheduleNo) {
            this.GetDrScheduleDtByScheduleIdAsync(ScheduleNo, null);
        }
        
        public void GetDrScheduleDtByScheduleIdAsync(string ScheduleNo, object userState) {
            if ((this.onBeginGetDrScheduleDtByScheduleIdDelegate == null)) {
                this.onBeginGetDrScheduleDtByScheduleIdDelegate = new BeginOperationDelegate(this.OnBeginGetDrScheduleDtByScheduleId);
            }
            if ((this.onEndGetDrScheduleDtByScheduleIdDelegate == null)) {
                this.onEndGetDrScheduleDtByScheduleIdDelegate = new EndOperationDelegate(this.OnEndGetDrScheduleDtByScheduleId);
            }
            if ((this.onGetDrScheduleDtByScheduleIdCompletedDelegate == null)) {
                this.onGetDrScheduleDtByScheduleIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDrScheduleDtByScheduleIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetDrScheduleDtByScheduleIdDelegate, new object[] {
                        ScheduleNo}, this.onEndGetDrScheduleDtByScheduleIdDelegate, this.onGetDrScheduleDtByScheduleIdCompletedDelegate, userState);
        }
        
        public HisProxy.DrSchedule.EmployeeOutput[] GetDiviSionDrByEmpCode(string EmpCode) {
            return base.Channel.GetDiviSionDrByEmpCode(EmpCode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDiviSionDrByEmpCode(string EmpCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDiviSionDrByEmpCode(EmpCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public HisProxy.DrSchedule.EmployeeOutput[] EndGetDiviSionDrByEmpCode(System.IAsyncResult result) {
            return base.Channel.EndGetDiviSionDrByEmpCode(result);
        }
        
        private System.IAsyncResult OnBeginGetDiviSionDrByEmpCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string EmpCode = ((string)(inValues[0]));
            return this.BeginGetDiviSionDrByEmpCode(EmpCode, callback, asyncState);
        }
        
        private object[] OnEndGetDiviSionDrByEmpCode(System.IAsyncResult result) {
            HisProxy.DrSchedule.EmployeeOutput[] retVal = this.EndGetDiviSionDrByEmpCode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDiviSionDrByEmpCodeCompleted(object state) {
            if ((this.GetDiviSionDrByEmpCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDiviSionDrByEmpCodeCompleted(this, new GetDiviSionDrByEmpCodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDiviSionDrByEmpCodeAsync(string EmpCode) {
            this.GetDiviSionDrByEmpCodeAsync(EmpCode, null);
        }
        
        public void GetDiviSionDrByEmpCodeAsync(string EmpCode, object userState) {
            if ((this.onBeginGetDiviSionDrByEmpCodeDelegate == null)) {
                this.onBeginGetDiviSionDrByEmpCodeDelegate = new BeginOperationDelegate(this.OnBeginGetDiviSionDrByEmpCode);
            }
            if ((this.onEndGetDiviSionDrByEmpCodeDelegate == null)) {
                this.onEndGetDiviSionDrByEmpCodeDelegate = new EndOperationDelegate(this.OnEndGetDiviSionDrByEmpCode);
            }
            if ((this.onGetDiviSionDrByEmpCodeCompletedDelegate == null)) {
                this.onGetDiviSionDrByEmpCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDiviSionDrByEmpCodeCompleted);
            }
            base.InvokeAsync(this.onBeginGetDiviSionDrByEmpCodeDelegate, new object[] {
                        EmpCode}, this.onEndGetDiviSionDrByEmpCodeDelegate, this.onGetDiviSionDrByEmpCodeCompletedDelegate, userState);
        }
        
        public HisProxy.DrSchedule.ScheduleOutPut[] GetDivScheduleByDate(object date) {
            return base.Channel.GetDivScheduleByDate(date);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDivScheduleByDate(object date, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDivScheduleByDate(date, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public HisProxy.DrSchedule.ScheduleOutPut[] EndGetDivScheduleByDate(System.IAsyncResult result) {
            return base.Channel.EndGetDivScheduleByDate(result);
        }
        
        private System.IAsyncResult OnBeginGetDivScheduleByDate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            object date = ((object)(inValues[0]));
            return this.BeginGetDivScheduleByDate(date, callback, asyncState);
        }
        
        private object[] OnEndGetDivScheduleByDate(System.IAsyncResult result) {
            HisProxy.DrSchedule.ScheduleOutPut[] retVal = this.EndGetDivScheduleByDate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDivScheduleByDateCompleted(object state) {
            if ((this.GetDivScheduleByDateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDivScheduleByDateCompleted(this, new GetDivScheduleByDateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDivScheduleByDateAsync(object date) {
            this.GetDivScheduleByDateAsync(date, null);
        }
        
        public void GetDivScheduleByDateAsync(object date, object userState) {
            if ((this.onBeginGetDivScheduleByDateDelegate == null)) {
                this.onBeginGetDivScheduleByDateDelegate = new BeginOperationDelegate(this.OnBeginGetDivScheduleByDate);
            }
            if ((this.onEndGetDivScheduleByDateDelegate == null)) {
                this.onEndGetDivScheduleByDateDelegate = new EndOperationDelegate(this.OnEndGetDivScheduleByDate);
            }
            if ((this.onGetDivScheduleByDateCompletedDelegate == null)) {
                this.onGetDivScheduleByDateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDivScheduleByDateCompleted);
            }
            base.InvokeAsync(this.onBeginGetDivScheduleByDateDelegate, new object[] {
                        date}, this.onEndGetDivScheduleByDateDelegate, this.onGetDivScheduleByDateCompletedDelegate, userState);
        }
        
        public HisProxy.DrSchedule.ScheduleOutPut[] GetMasterScheduleByDate(System.DateTime date) {
            return base.Channel.GetMasterScheduleByDate(date);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetMasterScheduleByDate(System.DateTime date, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMasterScheduleByDate(date, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public HisProxy.DrSchedule.ScheduleOutPut[] EndGetMasterScheduleByDate(System.IAsyncResult result) {
            return base.Channel.EndGetMasterScheduleByDate(result);
        }
        
        private System.IAsyncResult OnBeginGetMasterScheduleByDate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime date = ((System.DateTime)(inValues[0]));
            return this.BeginGetMasterScheduleByDate(date, callback, asyncState);
        }
        
        private object[] OnEndGetMasterScheduleByDate(System.IAsyncResult result) {
            HisProxy.DrSchedule.ScheduleOutPut[] retVal = this.EndGetMasterScheduleByDate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMasterScheduleByDateCompleted(object state) {
            if ((this.GetMasterScheduleByDateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMasterScheduleByDateCompleted(this, new GetMasterScheduleByDateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMasterScheduleByDateAsync(System.DateTime date) {
            this.GetMasterScheduleByDateAsync(date, null);
        }
        
        public void GetMasterScheduleByDateAsync(System.DateTime date, object userState) {
            if ((this.onBeginGetMasterScheduleByDateDelegate == null)) {
                this.onBeginGetMasterScheduleByDateDelegate = new BeginOperationDelegate(this.OnBeginGetMasterScheduleByDate);
            }
            if ((this.onEndGetMasterScheduleByDateDelegate == null)) {
                this.onEndGetMasterScheduleByDateDelegate = new EndOperationDelegate(this.OnEndGetMasterScheduleByDate);
            }
            if ((this.onGetMasterScheduleByDateCompletedDelegate == null)) {
                this.onGetMasterScheduleByDateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMasterScheduleByDateCompleted);
            }
            base.InvokeAsync(this.onBeginGetMasterScheduleByDateDelegate, new object[] {
                        date}, this.onEndGetMasterScheduleByDateDelegate, this.onGetMasterScheduleByDateCompletedDelegate, userState);
        }
        
        public bool IsRoomUsing(HisProxy.DrSchedule.GetVisitScheduleInput input) {
            return base.Channel.IsRoomUsing(input);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIsRoomUsing(HisProxy.DrSchedule.GetVisitScheduleInput input, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsRoomUsing(input, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndIsRoomUsing(System.IAsyncResult result) {
            return base.Channel.EndIsRoomUsing(result);
        }
        
        private System.IAsyncResult OnBeginIsRoomUsing(object[] inValues, System.AsyncCallback callback, object asyncState) {
            HisProxy.DrSchedule.GetVisitScheduleInput input = ((HisProxy.DrSchedule.GetVisitScheduleInput)(inValues[0]));
            return this.BeginIsRoomUsing(input, callback, asyncState);
        }
        
        private object[] OnEndIsRoomUsing(System.IAsyncResult result) {
            bool retVal = this.EndIsRoomUsing(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsRoomUsingCompleted(object state) {
            if ((this.IsRoomUsingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsRoomUsingCompleted(this, new IsRoomUsingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsRoomUsingAsync(HisProxy.DrSchedule.GetVisitScheduleInput input) {
            this.IsRoomUsingAsync(input, null);
        }
        
        public void IsRoomUsingAsync(HisProxy.DrSchedule.GetVisitScheduleInput input, object userState) {
            if ((this.onBeginIsRoomUsingDelegate == null)) {
                this.onBeginIsRoomUsingDelegate = new BeginOperationDelegate(this.OnBeginIsRoomUsing);
            }
            if ((this.onEndIsRoomUsingDelegate == null)) {
                this.onEndIsRoomUsingDelegate = new EndOperationDelegate(this.OnEndIsRoomUsing);
            }
            if ((this.onIsRoomUsingCompletedDelegate == null)) {
                this.onIsRoomUsingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsRoomUsingCompleted);
            }
            base.InvokeAsync(this.onBeginIsRoomUsingDelegate, new object[] {
                        input}, this.onEndIsRoomUsingDelegate, this.onIsRoomUsingCompletedDelegate, userState);
        }
        
        public HisProxy.DrSchedule.VisitScheduleMtDto GetVisitScheduleMt(HisProxy.DrSchedule.VisitSheduleInput input) {
            return base.Channel.GetVisitScheduleMt(input);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetVisitScheduleMt(HisProxy.DrSchedule.VisitSheduleInput input, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetVisitScheduleMt(input, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public HisProxy.DrSchedule.VisitScheduleMtDto EndGetVisitScheduleMt(System.IAsyncResult result) {
            return base.Channel.EndGetVisitScheduleMt(result);
        }
        
        private System.IAsyncResult OnBeginGetVisitScheduleMt(object[] inValues, System.AsyncCallback callback, object asyncState) {
            HisProxy.DrSchedule.VisitSheduleInput input = ((HisProxy.DrSchedule.VisitSheduleInput)(inValues[0]));
            return this.BeginGetVisitScheduleMt(input, callback, asyncState);
        }
        
        private object[] OnEndGetVisitScheduleMt(System.IAsyncResult result) {
            HisProxy.DrSchedule.VisitScheduleMtDto retVal = this.EndGetVisitScheduleMt(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetVisitScheduleMtCompleted(object state) {
            if ((this.GetVisitScheduleMtCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetVisitScheduleMtCompleted(this, new GetVisitScheduleMtCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetVisitScheduleMtAsync(HisProxy.DrSchedule.VisitSheduleInput input) {
            this.GetVisitScheduleMtAsync(input, null);
        }
        
        public void GetVisitScheduleMtAsync(HisProxy.DrSchedule.VisitSheduleInput input, object userState) {
            if ((this.onBeginGetVisitScheduleMtDelegate == null)) {
                this.onBeginGetVisitScheduleMtDelegate = new BeginOperationDelegate(this.OnBeginGetVisitScheduleMt);
            }
            if ((this.onEndGetVisitScheduleMtDelegate == null)) {
                this.onEndGetVisitScheduleMtDelegate = new EndOperationDelegate(this.OnEndGetVisitScheduleMt);
            }
            if ((this.onGetVisitScheduleMtCompletedDelegate == null)) {
                this.onGetVisitScheduleMtCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetVisitScheduleMtCompleted);
            }
            base.InvokeAsync(this.onBeginGetVisitScheduleMtDelegate, new object[] {
                        input}, this.onEndGetVisitScheduleMtDelegate, this.onGetVisitScheduleMtCompletedDelegate, userState);
        }
        
        public HisProxy.DrSchedule.DrSheduleOutput[] GetDrDtListByDrSchDtNo(string ScheduleNo, string Zone, System.DateTime VisitDate) {
            return base.Channel.GetDrDtListByDrSchDtNo(ScheduleNo, Zone, VisitDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDrDtListByDrSchDtNo(string ScheduleNo, string Zone, System.DateTime VisitDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDrDtListByDrSchDtNo(ScheduleNo, Zone, VisitDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public HisProxy.DrSchedule.DrSheduleOutput[] EndGetDrDtListByDrSchDtNo(System.IAsyncResult result) {
            return base.Channel.EndGetDrDtListByDrSchDtNo(result);
        }
        
        private System.IAsyncResult OnBeginGetDrDtListByDrSchDtNo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ScheduleNo = ((string)(inValues[0]));
            string Zone = ((string)(inValues[1]));
            System.DateTime VisitDate = ((System.DateTime)(inValues[2]));
            return this.BeginGetDrDtListByDrSchDtNo(ScheduleNo, Zone, VisitDate, callback, asyncState);
        }
        
        private object[] OnEndGetDrDtListByDrSchDtNo(System.IAsyncResult result) {
            HisProxy.DrSchedule.DrSheduleOutput[] retVal = this.EndGetDrDtListByDrSchDtNo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDrDtListByDrSchDtNoCompleted(object state) {
            if ((this.GetDrDtListByDrSchDtNoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDrDtListByDrSchDtNoCompleted(this, new GetDrDtListByDrSchDtNoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDrDtListByDrSchDtNoAsync(string ScheduleNo, string Zone, System.DateTime VisitDate) {
            this.GetDrDtListByDrSchDtNoAsync(ScheduleNo, Zone, VisitDate, null);
        }
        
        public void GetDrDtListByDrSchDtNoAsync(string ScheduleNo, string Zone, System.DateTime VisitDate, object userState) {
            if ((this.onBeginGetDrDtListByDrSchDtNoDelegate == null)) {
                this.onBeginGetDrDtListByDrSchDtNoDelegate = new BeginOperationDelegate(this.OnBeginGetDrDtListByDrSchDtNo);
            }
            if ((this.onEndGetDrDtListByDrSchDtNoDelegate == null)) {
                this.onEndGetDrDtListByDrSchDtNoDelegate = new EndOperationDelegate(this.OnEndGetDrDtListByDrSchDtNo);
            }
            if ((this.onGetDrDtListByDrSchDtNoCompletedDelegate == null)) {
                this.onGetDrDtListByDrSchDtNoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDrDtListByDrSchDtNoCompleted);
            }
            base.InvokeAsync(this.onBeginGetDrDtListByDrSchDtNoDelegate, new object[] {
                        ScheduleNo,
                        Zone,
                        VisitDate}, this.onEndGetDrDtListByDrSchDtNoDelegate, this.onGetDrDtListByDrSchDtNoCompletedDelegate, userState);
        }
        
        public HisProxy.DrSchedule.VisitRescordOutput[] GetVisitRescordList(string Zone, System.DateTime StartDate, System.DateTime EndDate, string DrNo) {
            return base.Channel.GetVisitRescordList(Zone, StartDate, EndDate, DrNo);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetVisitRescordList(string Zone, System.DateTime StartDate, System.DateTime EndDate, string DrNo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetVisitRescordList(Zone, StartDate, EndDate, DrNo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public HisProxy.DrSchedule.VisitRescordOutput[] EndGetVisitRescordList(System.IAsyncResult result) {
            return base.Channel.EndGetVisitRescordList(result);
        }
        
        private System.IAsyncResult OnBeginGetVisitRescordList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Zone = ((string)(inValues[0]));
            System.DateTime StartDate = ((System.DateTime)(inValues[1]));
            System.DateTime EndDate = ((System.DateTime)(inValues[2]));
            string DrNo = ((string)(inValues[3]));
            return this.BeginGetVisitRescordList(Zone, StartDate, EndDate, DrNo, callback, asyncState);
        }
        
        private object[] OnEndGetVisitRescordList(System.IAsyncResult result) {
            HisProxy.DrSchedule.VisitRescordOutput[] retVal = this.EndGetVisitRescordList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetVisitRescordListCompleted(object state) {
            if ((this.GetVisitRescordListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetVisitRescordListCompleted(this, new GetVisitRescordListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetVisitRescordListAsync(string Zone, System.DateTime StartDate, System.DateTime EndDate, string DrNo) {
            this.GetVisitRescordListAsync(Zone, StartDate, EndDate, DrNo, null);
        }
        
        public void GetVisitRescordListAsync(string Zone, System.DateTime StartDate, System.DateTime EndDate, string DrNo, object userState) {
            if ((this.onBeginGetVisitRescordListDelegate == null)) {
                this.onBeginGetVisitRescordListDelegate = new BeginOperationDelegate(this.OnBeginGetVisitRescordList);
            }
            if ((this.onEndGetVisitRescordListDelegate == null)) {
                this.onEndGetVisitRescordListDelegate = new EndOperationDelegate(this.OnEndGetVisitRescordList);
            }
            if ((this.onGetVisitRescordListCompletedDelegate == null)) {
                this.onGetVisitRescordListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetVisitRescordListCompleted);
            }
            base.InvokeAsync(this.onBeginGetVisitRescordListDelegate, new object[] {
                        Zone,
                        StartDate,
                        EndDate,
                        DrNo}, this.onEndGetVisitRescordListDelegate, this.onGetVisitRescordListCompletedDelegate, userState);
        }
        
        public HisProxy.DrSchedule.DrSheduleOutput[] GetDrScheduleDtByDate(string CurrDrNo, string Zone, System.DateTime StartDate, System.DateTime EndDate) {
            return base.Channel.GetDrScheduleDtByDate(CurrDrNo, Zone, StartDate, EndDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDrScheduleDtByDate(string CurrDrNo, string Zone, System.DateTime StartDate, System.DateTime EndDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDrScheduleDtByDate(CurrDrNo, Zone, StartDate, EndDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public HisProxy.DrSchedule.DrSheduleOutput[] EndGetDrScheduleDtByDate(System.IAsyncResult result) {
            return base.Channel.EndGetDrScheduleDtByDate(result);
        }
        
        private System.IAsyncResult OnBeginGetDrScheduleDtByDate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string CurrDrNo = ((string)(inValues[0]));
            string Zone = ((string)(inValues[1]));
            System.DateTime StartDate = ((System.DateTime)(inValues[2]));
            System.DateTime EndDate = ((System.DateTime)(inValues[3]));
            return this.BeginGetDrScheduleDtByDate(CurrDrNo, Zone, StartDate, EndDate, callback, asyncState);
        }
        
        private object[] OnEndGetDrScheduleDtByDate(System.IAsyncResult result) {
            HisProxy.DrSchedule.DrSheduleOutput[] retVal = this.EndGetDrScheduleDtByDate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDrScheduleDtByDateCompleted(object state) {
            if ((this.GetDrScheduleDtByDateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDrScheduleDtByDateCompleted(this, new GetDrScheduleDtByDateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDrScheduleDtByDateAsync(string CurrDrNo, string Zone, System.DateTime StartDate, System.DateTime EndDate) {
            this.GetDrScheduleDtByDateAsync(CurrDrNo, Zone, StartDate, EndDate, null);
        }
        
        public void GetDrScheduleDtByDateAsync(string CurrDrNo, string Zone, System.DateTime StartDate, System.DateTime EndDate, object userState) {
            if ((this.onBeginGetDrScheduleDtByDateDelegate == null)) {
                this.onBeginGetDrScheduleDtByDateDelegate = new BeginOperationDelegate(this.OnBeginGetDrScheduleDtByDate);
            }
            if ((this.onEndGetDrScheduleDtByDateDelegate == null)) {
                this.onEndGetDrScheduleDtByDateDelegate = new EndOperationDelegate(this.OnEndGetDrScheduleDtByDate);
            }
            if ((this.onGetDrScheduleDtByDateCompletedDelegate == null)) {
                this.onGetDrScheduleDtByDateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDrScheduleDtByDateCompleted);
            }
            base.InvokeAsync(this.onBeginGetDrScheduleDtByDateDelegate, new object[] {
                        CurrDrNo,
                        Zone,
                        StartDate,
                        EndDate}, this.onEndGetDrScheduleDtByDateDelegate, this.onGetDrScheduleDtByDateCompletedDelegate, userState);
        }
        
        public bool InsertVisitRestRecord(HisProxy.DrSchedule.VisitRestRecordDto dto) {
            return base.Channel.InsertVisitRestRecord(dto);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertVisitRestRecord(HisProxy.DrSchedule.VisitRestRecordDto dto, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertVisitRestRecord(dto, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndInsertVisitRestRecord(System.IAsyncResult result) {
            return base.Channel.EndInsertVisitRestRecord(result);
        }
        
        private System.IAsyncResult OnBeginInsertVisitRestRecord(object[] inValues, System.AsyncCallback callback, object asyncState) {
            HisProxy.DrSchedule.VisitRestRecordDto dto = ((HisProxy.DrSchedule.VisitRestRecordDto)(inValues[0]));
            return this.BeginInsertVisitRestRecord(dto, callback, asyncState);
        }
        
        private object[] OnEndInsertVisitRestRecord(System.IAsyncResult result) {
            bool retVal = this.EndInsertVisitRestRecord(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertVisitRestRecordCompleted(object state) {
            if ((this.InsertVisitRestRecordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertVisitRestRecordCompleted(this, new InsertVisitRestRecordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertVisitRestRecordAsync(HisProxy.DrSchedule.VisitRestRecordDto dto) {
            this.InsertVisitRestRecordAsync(dto, null);
        }
        
        public void InsertVisitRestRecordAsync(HisProxy.DrSchedule.VisitRestRecordDto dto, object userState) {
            if ((this.onBeginInsertVisitRestRecordDelegate == null)) {
                this.onBeginInsertVisitRestRecordDelegate = new BeginOperationDelegate(this.OnBeginInsertVisitRestRecord);
            }
            if ((this.onEndInsertVisitRestRecordDelegate == null)) {
                this.onEndInsertVisitRestRecordDelegate = new EndOperationDelegate(this.OnEndInsertVisitRestRecord);
            }
            if ((this.onInsertVisitRestRecordCompletedDelegate == null)) {
                this.onInsertVisitRestRecordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertVisitRestRecordCompleted);
            }
            base.InvokeAsync(this.onBeginInsertVisitRestRecordDelegate, new object[] {
                        dto}, this.onEndInsertVisitRestRecordDelegate, this.onInsertVisitRestRecordCompletedDelegate, userState);
        }
        
        public long InsertVisitScheduleMt(HisProxy.DrSchedule.VisitScheduleMtDto dto) {
            return base.Channel.InsertVisitScheduleMt(dto);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertVisitScheduleMt(HisProxy.DrSchedule.VisitScheduleMtDto dto, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertVisitScheduleMt(dto, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public long EndInsertVisitScheduleMt(System.IAsyncResult result) {
            return base.Channel.EndInsertVisitScheduleMt(result);
        }
        
        private System.IAsyncResult OnBeginInsertVisitScheduleMt(object[] inValues, System.AsyncCallback callback, object asyncState) {
            HisProxy.DrSchedule.VisitScheduleMtDto dto = ((HisProxy.DrSchedule.VisitScheduleMtDto)(inValues[0]));
            return this.BeginInsertVisitScheduleMt(dto, callback, asyncState);
        }
        
        private object[] OnEndInsertVisitScheduleMt(System.IAsyncResult result) {
            long retVal = this.EndInsertVisitScheduleMt(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertVisitScheduleMtCompleted(object state) {
            if ((this.InsertVisitScheduleMtCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertVisitScheduleMtCompleted(this, new InsertVisitScheduleMtCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertVisitScheduleMtAsync(HisProxy.DrSchedule.VisitScheduleMtDto dto) {
            this.InsertVisitScheduleMtAsync(dto, null);
        }
        
        public void InsertVisitScheduleMtAsync(HisProxy.DrSchedule.VisitScheduleMtDto dto, object userState) {
            if ((this.onBeginInsertVisitScheduleMtDelegate == null)) {
                this.onBeginInsertVisitScheduleMtDelegate = new BeginOperationDelegate(this.OnBeginInsertVisitScheduleMt);
            }
            if ((this.onEndInsertVisitScheduleMtDelegate == null)) {
                this.onEndInsertVisitScheduleMtDelegate = new EndOperationDelegate(this.OnEndInsertVisitScheduleMt);
            }
            if ((this.onInsertVisitScheduleMtCompletedDelegate == null)) {
                this.onInsertVisitScheduleMtCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertVisitScheduleMtCompleted);
            }
            base.InvokeAsync(this.onBeginInsertVisitScheduleMtDelegate, new object[] {
                        dto}, this.onEndInsertVisitScheduleMtDelegate, this.onInsertVisitScheduleMtCompletedDelegate, userState);
        }
        
        public bool UpdteVisitScheduleMt(HisProxy.DrSchedule.VisitScheduleMtDto dto) {
            return base.Channel.UpdteVisitScheduleMt(dto);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdteVisitScheduleMt(HisProxy.DrSchedule.VisitScheduleMtDto dto, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdteVisitScheduleMt(dto, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndUpdteVisitScheduleMt(System.IAsyncResult result) {
            return base.Channel.EndUpdteVisitScheduleMt(result);
        }
        
        private System.IAsyncResult OnBeginUpdteVisitScheduleMt(object[] inValues, System.AsyncCallback callback, object asyncState) {
            HisProxy.DrSchedule.VisitScheduleMtDto dto = ((HisProxy.DrSchedule.VisitScheduleMtDto)(inValues[0]));
            return this.BeginUpdteVisitScheduleMt(dto, callback, asyncState);
        }
        
        private object[] OnEndUpdteVisitScheduleMt(System.IAsyncResult result) {
            bool retVal = this.EndUpdteVisitScheduleMt(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdteVisitScheduleMtCompleted(object state) {
            if ((this.UpdteVisitScheduleMtCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdteVisitScheduleMtCompleted(this, new UpdteVisitScheduleMtCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdteVisitScheduleMtAsync(HisProxy.DrSchedule.VisitScheduleMtDto dto) {
            this.UpdteVisitScheduleMtAsync(dto, null);
        }
        
        public void UpdteVisitScheduleMtAsync(HisProxy.DrSchedule.VisitScheduleMtDto dto, object userState) {
            if ((this.onBeginUpdteVisitScheduleMtDelegate == null)) {
                this.onBeginUpdteVisitScheduleMtDelegate = new BeginOperationDelegate(this.OnBeginUpdteVisitScheduleMt);
            }
            if ((this.onEndUpdteVisitScheduleMtDelegate == null)) {
                this.onEndUpdteVisitScheduleMtDelegate = new EndOperationDelegate(this.OnEndUpdteVisitScheduleMt);
            }
            if ((this.onUpdteVisitScheduleMtCompletedDelegate == null)) {
                this.onUpdteVisitScheduleMtCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdteVisitScheduleMtCompleted);
            }
            base.InvokeAsync(this.onBeginUpdteVisitScheduleMtDelegate, new object[] {
                        dto}, this.onEndUpdteVisitScheduleMtDelegate, this.onUpdteVisitScheduleMtCompletedDelegate, userState);
        }
        
        public bool UpdateVisitDrSchDt(System.Data.DataTable ot) {
            return base.Channel.UpdateVisitDrSchDt(ot);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateVisitDrSchDt(System.Data.DataTable ot, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateVisitDrSchDt(ot, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndUpdateVisitDrSchDt(System.IAsyncResult result) {
            return base.Channel.EndUpdateVisitDrSchDt(result);
        }
        
        private System.IAsyncResult OnBeginUpdateVisitDrSchDt(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Data.DataTable ot = ((System.Data.DataTable)(inValues[0]));
            return this.BeginUpdateVisitDrSchDt(ot, callback, asyncState);
        }
        
        private object[] OnEndUpdateVisitDrSchDt(System.IAsyncResult result) {
            bool retVal = this.EndUpdateVisitDrSchDt(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateVisitDrSchDtCompleted(object state) {
            if ((this.UpdateVisitDrSchDtCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateVisitDrSchDtCompleted(this, new UpdateVisitDrSchDtCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateVisitDrSchDtAsync(System.Data.DataTable ot) {
            this.UpdateVisitDrSchDtAsync(ot, null);
        }
        
        public void UpdateVisitDrSchDtAsync(System.Data.DataTable ot, object userState) {
            if ((this.onBeginUpdateVisitDrSchDtDelegate == null)) {
                this.onBeginUpdateVisitDrSchDtDelegate = new BeginOperationDelegate(this.OnBeginUpdateVisitDrSchDt);
            }
            if ((this.onEndUpdateVisitDrSchDtDelegate == null)) {
                this.onEndUpdateVisitDrSchDtDelegate = new EndOperationDelegate(this.OnEndUpdateVisitDrSchDt);
            }
            if ((this.onUpdateVisitDrSchDtCompletedDelegate == null)) {
                this.onUpdateVisitDrSchDtCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateVisitDrSchDtCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateVisitDrSchDtDelegate, new object[] {
                        ot}, this.onEndUpdateVisitDrSchDtDelegate, this.onUpdateVisitDrSchDtCompletedDelegate, userState);
        }
        
        public bool UpdateVisitRecord(HisProxy.DrSchedule.VisitRestRecordDto ot) {
            return base.Channel.UpdateVisitRecord(ot);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateVisitRecord(HisProxy.DrSchedule.VisitRestRecordDto ot, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateVisitRecord(ot, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndUpdateVisitRecord(System.IAsyncResult result) {
            return base.Channel.EndUpdateVisitRecord(result);
        }
        
        private System.IAsyncResult OnBeginUpdateVisitRecord(object[] inValues, System.AsyncCallback callback, object asyncState) {
            HisProxy.DrSchedule.VisitRestRecordDto ot = ((HisProxy.DrSchedule.VisitRestRecordDto)(inValues[0]));
            return this.BeginUpdateVisitRecord(ot, callback, asyncState);
        }
        
        private object[] OnEndUpdateVisitRecord(System.IAsyncResult result) {
            bool retVal = this.EndUpdateVisitRecord(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateVisitRecordCompleted(object state) {
            if ((this.UpdateVisitRecordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateVisitRecordCompleted(this, new UpdateVisitRecordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateVisitRecordAsync(HisProxy.DrSchedule.VisitRestRecordDto ot) {
            this.UpdateVisitRecordAsync(ot, null);
        }
        
        public void UpdateVisitRecordAsync(HisProxy.DrSchedule.VisitRestRecordDto ot, object userState) {
            if ((this.onBeginUpdateVisitRecordDelegate == null)) {
                this.onBeginUpdateVisitRecordDelegate = new BeginOperationDelegate(this.OnBeginUpdateVisitRecord);
            }
            if ((this.onEndUpdateVisitRecordDelegate == null)) {
                this.onEndUpdateVisitRecordDelegate = new EndOperationDelegate(this.OnEndUpdateVisitRecord);
            }
            if ((this.onUpdateVisitRecordCompletedDelegate == null)) {
                this.onUpdateVisitRecordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateVisitRecordCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateVisitRecordDelegate, new object[] {
                        ot}, this.onEndUpdateVisitRecordDelegate, this.onUpdateVisitRecordCompletedDelegate, userState);
        }
        
        public bool DelVisitRestRecord(HisProxy.DrSchedule.DelVisitRestRecordInput input) {
            return base.Channel.DelVisitRestRecord(input);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDelVisitRestRecord(HisProxy.DrSchedule.DelVisitRestRecordInput input, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDelVisitRestRecord(input, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndDelVisitRestRecord(System.IAsyncResult result) {
            return base.Channel.EndDelVisitRestRecord(result);
        }
        
        private System.IAsyncResult OnBeginDelVisitRestRecord(object[] inValues, System.AsyncCallback callback, object asyncState) {
            HisProxy.DrSchedule.DelVisitRestRecordInput input = ((HisProxy.DrSchedule.DelVisitRestRecordInput)(inValues[0]));
            return this.BeginDelVisitRestRecord(input, callback, asyncState);
        }
        
        private object[] OnEndDelVisitRestRecord(System.IAsyncResult result) {
            bool retVal = this.EndDelVisitRestRecord(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDelVisitRestRecordCompleted(object state) {
            if ((this.DelVisitRestRecordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DelVisitRestRecordCompleted(this, new DelVisitRestRecordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DelVisitRestRecordAsync(HisProxy.DrSchedule.DelVisitRestRecordInput input) {
            this.DelVisitRestRecordAsync(input, null);
        }
        
        public void DelVisitRestRecordAsync(HisProxy.DrSchedule.DelVisitRestRecordInput input, object userState) {
            if ((this.onBeginDelVisitRestRecordDelegate == null)) {
                this.onBeginDelVisitRestRecordDelegate = new BeginOperationDelegate(this.OnBeginDelVisitRestRecord);
            }
            if ((this.onEndDelVisitRestRecordDelegate == null)) {
                this.onEndDelVisitRestRecordDelegate = new EndOperationDelegate(this.OnEndDelVisitRestRecord);
            }
            if ((this.onDelVisitRestRecordCompletedDelegate == null)) {
                this.onDelVisitRestRecordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDelVisitRestRecordCompleted);
            }
            base.InvokeAsync(this.onBeginDelVisitRestRecordDelegate, new object[] {
                        input}, this.onEndDelVisitRestRecordDelegate, this.onDelVisitRestRecordCompletedDelegate, userState);
        }
        
        public bool UpdateDrSchDtFromVisitRest(HisProxy.DrSchedule.UpdateDrSchDtInput input) {
            return base.Channel.UpdateDrSchDtFromVisitRest(input);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateDrSchDtFromVisitRest(HisProxy.DrSchedule.UpdateDrSchDtInput input, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateDrSchDtFromVisitRest(input, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndUpdateDrSchDtFromVisitRest(System.IAsyncResult result) {
            return base.Channel.EndUpdateDrSchDtFromVisitRest(result);
        }
        
        private System.IAsyncResult OnBeginUpdateDrSchDtFromVisitRest(object[] inValues, System.AsyncCallback callback, object asyncState) {
            HisProxy.DrSchedule.UpdateDrSchDtInput input = ((HisProxy.DrSchedule.UpdateDrSchDtInput)(inValues[0]));
            return this.BeginUpdateDrSchDtFromVisitRest(input, callback, asyncState);
        }
        
        private object[] OnEndUpdateDrSchDtFromVisitRest(System.IAsyncResult result) {
            bool retVal = this.EndUpdateDrSchDtFromVisitRest(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateDrSchDtFromVisitRestCompleted(object state) {
            if ((this.UpdateDrSchDtFromVisitRestCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateDrSchDtFromVisitRestCompleted(this, new UpdateDrSchDtFromVisitRestCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateDrSchDtFromVisitRestAsync(HisProxy.DrSchedule.UpdateDrSchDtInput input) {
            this.UpdateDrSchDtFromVisitRestAsync(input, null);
        }
        
        public void UpdateDrSchDtFromVisitRestAsync(HisProxy.DrSchedule.UpdateDrSchDtInput input, object userState) {
            if ((this.onBeginUpdateDrSchDtFromVisitRestDelegate == null)) {
                this.onBeginUpdateDrSchDtFromVisitRestDelegate = new BeginOperationDelegate(this.OnBeginUpdateDrSchDtFromVisitRest);
            }
            if ((this.onEndUpdateDrSchDtFromVisitRestDelegate == null)) {
                this.onEndUpdateDrSchDtFromVisitRestDelegate = new EndOperationDelegate(this.OnEndUpdateDrSchDtFromVisitRest);
            }
            if ((this.onUpdateDrSchDtFromVisitRestCompletedDelegate == null)) {
                this.onUpdateDrSchDtFromVisitRestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateDrSchDtFromVisitRestCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateDrSchDtFromVisitRestDelegate, new object[] {
                        input}, this.onEndUpdateDrSchDtFromVisitRestDelegate, this.onUpdateDrSchDtFromVisitRestCompletedDelegate, userState);
        }
        
        public HisProxy.DrSchedule.VisitScheduleOutPut[] GetDrVisitSchMtListByRoomNo(string Zone, string RoomNo) {
            return base.Channel.GetDrVisitSchMtListByRoomNo(Zone, RoomNo);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDrVisitSchMtListByRoomNo(string Zone, string RoomNo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDrVisitSchMtListByRoomNo(Zone, RoomNo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public HisProxy.DrSchedule.VisitScheduleOutPut[] EndGetDrVisitSchMtListByRoomNo(System.IAsyncResult result) {
            return base.Channel.EndGetDrVisitSchMtListByRoomNo(result);
        }
        
        private System.IAsyncResult OnBeginGetDrVisitSchMtListByRoomNo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Zone = ((string)(inValues[0]));
            string RoomNo = ((string)(inValues[1]));
            return this.BeginGetDrVisitSchMtListByRoomNo(Zone, RoomNo, callback, asyncState);
        }
        
        private object[] OnEndGetDrVisitSchMtListByRoomNo(System.IAsyncResult result) {
            HisProxy.DrSchedule.VisitScheduleOutPut[] retVal = this.EndGetDrVisitSchMtListByRoomNo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDrVisitSchMtListByRoomNoCompleted(object state) {
            if ((this.GetDrVisitSchMtListByRoomNoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDrVisitSchMtListByRoomNoCompleted(this, new GetDrVisitSchMtListByRoomNoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDrVisitSchMtListByRoomNoAsync(string Zone, string RoomNo) {
            this.GetDrVisitSchMtListByRoomNoAsync(Zone, RoomNo, null);
        }
        
        public void GetDrVisitSchMtListByRoomNoAsync(string Zone, string RoomNo, object userState) {
            if ((this.onBeginGetDrVisitSchMtListByRoomNoDelegate == null)) {
                this.onBeginGetDrVisitSchMtListByRoomNoDelegate = new BeginOperationDelegate(this.OnBeginGetDrVisitSchMtListByRoomNo);
            }
            if ((this.onEndGetDrVisitSchMtListByRoomNoDelegate == null)) {
                this.onEndGetDrVisitSchMtListByRoomNoDelegate = new EndOperationDelegate(this.OnEndGetDrVisitSchMtListByRoomNo);
            }
            if ((this.onGetDrVisitSchMtListByRoomNoCompletedDelegate == null)) {
                this.onGetDrVisitSchMtListByRoomNoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDrVisitSchMtListByRoomNoCompleted);
            }
            base.InvokeAsync(this.onBeginGetDrVisitSchMtListByRoomNoDelegate, new object[] {
                        Zone,
                        RoomNo}, this.onEndGetDrVisitSchMtListByRoomNoDelegate, this.onGetDrVisitSchMtListByRoomNoCompletedDelegate, userState);
        }
        
        public HisProxy.DrSchedule.VisitLevelSetDto[] GetVisitLevelSetByLevelCode(string LevelCode, string Zone) {
            return base.Channel.GetVisitLevelSetByLevelCode(LevelCode, Zone);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetVisitLevelSetByLevelCode(string LevelCode, string Zone, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetVisitLevelSetByLevelCode(LevelCode, Zone, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public HisProxy.DrSchedule.VisitLevelSetDto[] EndGetVisitLevelSetByLevelCode(System.IAsyncResult result) {
            return base.Channel.EndGetVisitLevelSetByLevelCode(result);
        }
        
        private System.IAsyncResult OnBeginGetVisitLevelSetByLevelCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string LevelCode = ((string)(inValues[0]));
            string Zone = ((string)(inValues[1]));
            return this.BeginGetVisitLevelSetByLevelCode(LevelCode, Zone, callback, asyncState);
        }
        
        private object[] OnEndGetVisitLevelSetByLevelCode(System.IAsyncResult result) {
            HisProxy.DrSchedule.VisitLevelSetDto[] retVal = this.EndGetVisitLevelSetByLevelCode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetVisitLevelSetByLevelCodeCompleted(object state) {
            if ((this.GetVisitLevelSetByLevelCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetVisitLevelSetByLevelCodeCompleted(this, new GetVisitLevelSetByLevelCodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetVisitLevelSetByLevelCodeAsync(string LevelCode, string Zone) {
            this.GetVisitLevelSetByLevelCodeAsync(LevelCode, Zone, null);
        }
        
        public void GetVisitLevelSetByLevelCodeAsync(string LevelCode, string Zone, object userState) {
            if ((this.onBeginGetVisitLevelSetByLevelCodeDelegate == null)) {
                this.onBeginGetVisitLevelSetByLevelCodeDelegate = new BeginOperationDelegate(this.OnBeginGetVisitLevelSetByLevelCode);
            }
            if ((this.onEndGetVisitLevelSetByLevelCodeDelegate == null)) {
                this.onEndGetVisitLevelSetByLevelCodeDelegate = new EndOperationDelegate(this.OnEndGetVisitLevelSetByLevelCode);
            }
            if ((this.onGetVisitLevelSetByLevelCodeCompletedDelegate == null)) {
                this.onGetVisitLevelSetByLevelCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetVisitLevelSetByLevelCodeCompleted);
            }
            base.InvokeAsync(this.onBeginGetVisitLevelSetByLevelCodeDelegate, new object[] {
                        LevelCode,
                        Zone}, this.onEndGetVisitLevelSetByLevelCodeDelegate, this.onGetVisitLevelSetByLevelCodeCompletedDelegate, userState);
        }
        
        public System.Data.DataTable QueryDrScheduleDtByDate(string EmpCode, System.DateTime StartDate, System.DateTime EndDate, string Zone) {
            return base.Channel.QueryDrScheduleDtByDate(EmpCode, StartDate, EndDate, Zone);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginQueryDrScheduleDtByDate(string EmpCode, System.DateTime StartDate, System.DateTime EndDate, string Zone, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginQueryDrScheduleDtByDate(EmpCode, StartDate, EndDate, Zone, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataTable EndQueryDrScheduleDtByDate(System.IAsyncResult result) {
            return base.Channel.EndQueryDrScheduleDtByDate(result);
        }
        
        private System.IAsyncResult OnBeginQueryDrScheduleDtByDate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string EmpCode = ((string)(inValues[0]));
            System.DateTime StartDate = ((System.DateTime)(inValues[1]));
            System.DateTime EndDate = ((System.DateTime)(inValues[2]));
            string Zone = ((string)(inValues[3]));
            return this.BeginQueryDrScheduleDtByDate(EmpCode, StartDate, EndDate, Zone, callback, asyncState);
        }
        
        private object[] OnEndQueryDrScheduleDtByDate(System.IAsyncResult result) {
            System.Data.DataTable retVal = this.EndQueryDrScheduleDtByDate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnQueryDrScheduleDtByDateCompleted(object state) {
            if ((this.QueryDrScheduleDtByDateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.QueryDrScheduleDtByDateCompleted(this, new QueryDrScheduleDtByDateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void QueryDrScheduleDtByDateAsync(string EmpCode, System.DateTime StartDate, System.DateTime EndDate, string Zone) {
            this.QueryDrScheduleDtByDateAsync(EmpCode, StartDate, EndDate, Zone, null);
        }
        
        public void QueryDrScheduleDtByDateAsync(string EmpCode, System.DateTime StartDate, System.DateTime EndDate, string Zone, object userState) {
            if ((this.onBeginQueryDrScheduleDtByDateDelegate == null)) {
                this.onBeginQueryDrScheduleDtByDateDelegate = new BeginOperationDelegate(this.OnBeginQueryDrScheduleDtByDate);
            }
            if ((this.onEndQueryDrScheduleDtByDateDelegate == null)) {
                this.onEndQueryDrScheduleDtByDateDelegate = new EndOperationDelegate(this.OnEndQueryDrScheduleDtByDate);
            }
            if ((this.onQueryDrScheduleDtByDateCompletedDelegate == null)) {
                this.onQueryDrScheduleDtByDateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnQueryDrScheduleDtByDateCompleted);
            }
            base.InvokeAsync(this.onBeginQueryDrScheduleDtByDateDelegate, new object[] {
                        EmpCode,
                        StartDate,
                        EndDate,
                        Zone}, this.onEndQueryDrScheduleDtByDateDelegate, this.onQueryDrScheduleDtByDateCompletedDelegate, userState);
        }
        
        public System.Data.DataTable QueryVisitRecordbyDrCode(string DrCode, string Zone, System.DateTime StartDate, System.DateTime EndDate) {
            return base.Channel.QueryVisitRecordbyDrCode(DrCode, Zone, StartDate, EndDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginQueryVisitRecordbyDrCode(string DrCode, string Zone, System.DateTime StartDate, System.DateTime EndDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginQueryVisitRecordbyDrCode(DrCode, Zone, StartDate, EndDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataTable EndQueryVisitRecordbyDrCode(System.IAsyncResult result) {
            return base.Channel.EndQueryVisitRecordbyDrCode(result);
        }
        
        private System.IAsyncResult OnBeginQueryVisitRecordbyDrCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string DrCode = ((string)(inValues[0]));
            string Zone = ((string)(inValues[1]));
            System.DateTime StartDate = ((System.DateTime)(inValues[2]));
            System.DateTime EndDate = ((System.DateTime)(inValues[3]));
            return this.BeginQueryVisitRecordbyDrCode(DrCode, Zone, StartDate, EndDate, callback, asyncState);
        }
        
        private object[] OnEndQueryVisitRecordbyDrCode(System.IAsyncResult result) {
            System.Data.DataTable retVal = this.EndQueryVisitRecordbyDrCode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnQueryVisitRecordbyDrCodeCompleted(object state) {
            if ((this.QueryVisitRecordbyDrCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.QueryVisitRecordbyDrCodeCompleted(this, new QueryVisitRecordbyDrCodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void QueryVisitRecordbyDrCodeAsync(string DrCode, string Zone, System.DateTime StartDate, System.DateTime EndDate) {
            this.QueryVisitRecordbyDrCodeAsync(DrCode, Zone, StartDate, EndDate, null);
        }
        
        public void QueryVisitRecordbyDrCodeAsync(string DrCode, string Zone, System.DateTime StartDate, System.DateTime EndDate, object userState) {
            if ((this.onBeginQueryVisitRecordbyDrCodeDelegate == null)) {
                this.onBeginQueryVisitRecordbyDrCodeDelegate = new BeginOperationDelegate(this.OnBeginQueryVisitRecordbyDrCode);
            }
            if ((this.onEndQueryVisitRecordbyDrCodeDelegate == null)) {
                this.onEndQueryVisitRecordbyDrCodeDelegate = new EndOperationDelegate(this.OnEndQueryVisitRecordbyDrCode);
            }
            if ((this.onQueryVisitRecordbyDrCodeCompletedDelegate == null)) {
                this.onQueryVisitRecordbyDrCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnQueryVisitRecordbyDrCodeCompleted);
            }
            base.InvokeAsync(this.onBeginQueryVisitRecordbyDrCodeDelegate, new object[] {
                        DrCode,
                        Zone,
                        StartDate,
                        EndDate}, this.onEndQueryVisitRecordbyDrCodeDelegate, this.onQueryVisitRecordbyDrCodeCompletedDelegate, userState);
        }
        
        public System.Data.DataTable QueryProductbyItemCode(string ItemCode) {
            return base.Channel.QueryProductbyItemCode(ItemCode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginQueryProductbyItemCode(string ItemCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginQueryProductbyItemCode(ItemCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataTable EndQueryProductbyItemCode(System.IAsyncResult result) {
            return base.Channel.EndQueryProductbyItemCode(result);
        }
        
        private System.IAsyncResult OnBeginQueryProductbyItemCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ItemCode = ((string)(inValues[0]));
            return this.BeginQueryProductbyItemCode(ItemCode, callback, asyncState);
        }
        
        private object[] OnEndQueryProductbyItemCode(System.IAsyncResult result) {
            System.Data.DataTable retVal = this.EndQueryProductbyItemCode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnQueryProductbyItemCodeCompleted(object state) {
            if ((this.QueryProductbyItemCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.QueryProductbyItemCodeCompleted(this, new QueryProductbyItemCodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void QueryProductbyItemCodeAsync(string ItemCode) {
            this.QueryProductbyItemCodeAsync(ItemCode, null);
        }
        
        public void QueryProductbyItemCodeAsync(string ItemCode, object userState) {
            if ((this.onBeginQueryProductbyItemCodeDelegate == null)) {
                this.onBeginQueryProductbyItemCodeDelegate = new BeginOperationDelegate(this.OnBeginQueryProductbyItemCode);
            }
            if ((this.onEndQueryProductbyItemCodeDelegate == null)) {
                this.onEndQueryProductbyItemCodeDelegate = new EndOperationDelegate(this.OnEndQueryProductbyItemCode);
            }
            if ((this.onQueryProductbyItemCodeCompletedDelegate == null)) {
                this.onQueryProductbyItemCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnQueryProductbyItemCodeCompleted);
            }
            base.InvokeAsync(this.onBeginQueryProductbyItemCodeDelegate, new object[] {
                        ItemCode}, this.onEndQueryProductbyItemCodeDelegate, this.onQueryProductbyItemCodeCompletedDelegate, userState);
        }
        
        public int QueryVisit(string Zone, string VisitDate, string VisitSction, string RoomNo) {
            return base.Channel.QueryVisit(Zone, VisitDate, VisitSction, RoomNo);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginQueryVisit(string Zone, string VisitDate, string VisitSction, string RoomNo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginQueryVisit(Zone, VisitDate, VisitSction, RoomNo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndQueryVisit(System.IAsyncResult result) {
            return base.Channel.EndQueryVisit(result);
        }
        
        private System.IAsyncResult OnBeginQueryVisit(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Zone = ((string)(inValues[0]));
            string VisitDate = ((string)(inValues[1]));
            string VisitSction = ((string)(inValues[2]));
            string RoomNo = ((string)(inValues[3]));
            return this.BeginQueryVisit(Zone, VisitDate, VisitSction, RoomNo, callback, asyncState);
        }
        
        private object[] OnEndQueryVisit(System.IAsyncResult result) {
            int retVal = this.EndQueryVisit(result);
            return new object[] {
                    retVal};
        }
        
        private void OnQueryVisitCompleted(object state) {
            if ((this.QueryVisitCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.QueryVisitCompleted(this, new QueryVisitCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void QueryVisitAsync(string Zone, string VisitDate, string VisitSction, string RoomNo) {
            this.QueryVisitAsync(Zone, VisitDate, VisitSction, RoomNo, null);
        }
        
        public void QueryVisitAsync(string Zone, string VisitDate, string VisitSction, string RoomNo, object userState) {
            if ((this.onBeginQueryVisitDelegate == null)) {
                this.onBeginQueryVisitDelegate = new BeginOperationDelegate(this.OnBeginQueryVisit);
            }
            if ((this.onEndQueryVisitDelegate == null)) {
                this.onEndQueryVisitDelegate = new EndOperationDelegate(this.OnEndQueryVisit);
            }
            if ((this.onQueryVisitCompletedDelegate == null)) {
                this.onQueryVisitCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnQueryVisitCompleted);
            }
            base.InvokeAsync(this.onBeginQueryVisitDelegate, new object[] {
                        Zone,
                        VisitDate,
                        VisitSction,
                        RoomNo}, this.onEndQueryVisitDelegate, this.onQueryVisitCompletedDelegate, userState);
        }
        
        public bool SetDrSchMt(HisProxy.DrSchedule.VisitScheduleMtDto dto) {
            return base.Channel.SetDrSchMt(dto);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetDrSchMt(HisProxy.DrSchedule.VisitScheduleMtDto dto, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetDrSchMt(dto, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndSetDrSchMt(System.IAsyncResult result) {
            return base.Channel.EndSetDrSchMt(result);
        }
        
        private System.IAsyncResult OnBeginSetDrSchMt(object[] inValues, System.AsyncCallback callback, object asyncState) {
            HisProxy.DrSchedule.VisitScheduleMtDto dto = ((HisProxy.DrSchedule.VisitScheduleMtDto)(inValues[0]));
            return this.BeginSetDrSchMt(dto, callback, asyncState);
        }
        
        private object[] OnEndSetDrSchMt(System.IAsyncResult result) {
            bool retVal = this.EndSetDrSchMt(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetDrSchMtCompleted(object state) {
            if ((this.SetDrSchMtCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetDrSchMtCompleted(this, new SetDrSchMtCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetDrSchMtAsync(HisProxy.DrSchedule.VisitScheduleMtDto dto) {
            this.SetDrSchMtAsync(dto, null);
        }
        
        public void SetDrSchMtAsync(HisProxy.DrSchedule.VisitScheduleMtDto dto, object userState) {
            if ((this.onBeginSetDrSchMtDelegate == null)) {
                this.onBeginSetDrSchMtDelegate = new BeginOperationDelegate(this.OnBeginSetDrSchMt);
            }
            if ((this.onEndSetDrSchMtDelegate == null)) {
                this.onEndSetDrSchMtDelegate = new EndOperationDelegate(this.OnEndSetDrSchMt);
            }
            if ((this.onSetDrSchMtCompletedDelegate == null)) {
                this.onSetDrSchMtCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetDrSchMtCompleted);
            }
            base.InvokeAsync(this.onBeginSetDrSchMtDelegate, new object[] {
                        dto}, this.onEndSetDrSchMtDelegate, this.onSetDrSchMtCompletedDelegate, userState);
        }
    }
}
