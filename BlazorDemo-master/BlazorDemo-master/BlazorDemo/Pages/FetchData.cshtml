@page "/fetchdata"
@page "/fetchdata/{StartDate:datetime}"
@using BlazorDemo.Model.ViewModel
@inject HttpClient client

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class='table'>
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.DateFormatted</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
    <p>
        <a href="fetchdata/@StartDate.AddDays(-5).ToString(dateFormat)" class="btn btn-secondary float-left">
            ◀ Previous
        </a>
        <a href="fetchdata/@StartDate.AddDays(5).ToString(dateFormat)" class="btn btn-secondary float-right">
            Next ▶
        </a>
    </p>
}

@functions {
[Parameter] DateTime StartDate { get; set; }

WeatherForecast[] forecasts;

string dateFormat = "MM-dd-yyyy";

public override void SetParameters(ParameterCollection parameters)
{
    StartDate = DateTime.Now;
    base.SetParameters(parameters);
}

protected override async Task OnParametersSetAsync()
{
    forecasts = await client.GetJsonAsync<WeatherForecast[]>($"api/sampledata/weatherforecasts/{StartDate.ToString(dateFormat)}");
}
}